{
	"name": "Sky",
	"description": "Interact with built-in Sky & Weather system.",
	"authority": "client",
	"static_functions": [
		{
			"authority": "client",
			"name": "Spawn",
			"description": "Replaces all Sky/Sun actors with the Ultra Dynamic Sky Actor, to be able to use the functions from this page",
			"description_long": "Replaces all Sky/Sun actors with the Ultra Dynamic Sky Actor, to be able to use the functions from this page. Internally this calls <code>Sky.DestroyAllSky()</code> automatically",
			"parameters": [
				{
					"type": "boolean",
					"name": "spawn_weather",
					"default": "false",
					"description": "Whether or not to spawn the Weather Actor (to be able to use Weather related methods)"
				}
			]
		},
		{
			"authority": "client",
			"name": "DestroyAllSky",
			"description": "Destroys all Directional Lights, Sky Lights, Exponential Height Fogs, Volumetric Clouds, Sky Atmosphere, Ultra Dynamic Sky Actors and all Actors with the <code>Sun</code> Actor Tag from the Level"
		},
		{
			"authority": "client",
			"name": "Reconstruct",
			"description": "Reconstruct the Ultra Dynamic Sky Actor, forces most of the changes to be applied"
		},
		{
			"authority": "client",
			"name": "SetMoonTexture",
			"description": "Sets the Moon Texture",
			"description_long": "Sets the Moon Texture<br /><br />Set it to empty to restore the default. After setting it, you must call <code>Sky.Reconstruct()</code> to have it applied properly",
			"parameters": [
				{
					"type": "ImagePath",
					"name": "texture"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetMoonTextureRotation",
			"description": "Sets the Moon Texture Rotation",
			"parameters": [
				{
					"type": "float",
					"name": "rotation"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetMoonVerticalOffset",
			"description": "Sets the Moon Vertical Offset",
			"parameters": [
				{
					"type": "float",
					"name": "offset"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetMoonScale",
			"description": "Sets the Moon Scale",
			"parameters": [
				{
					"type": "float",
					"name": "scale"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetMoonPhase",
			"description": "Sets the Moon Phase",
			"parameters": [
				{
					"type": "float",
					"name": "phase",
					"description": "Ranges from 0-30"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetMoonGlowIntensity",
			"description": "Sets the Moon Glow Intensity",
			"parameters": [
				{
					"type": "float",
					"name": "glow_intensity"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetMoonLightIntensity",
			"description": "Sets the Moon Light Intensity",
			"parameters": [
				{
					"type": "float",
					"name": "intensity"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetSunAngle",
			"description": "Sets the Sun Angle",
			"parameters": [
				{
					"type": "float",
					"name": "angle"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetSunRadius",
			"description": "Sets the Sun Radius",
			"parameters": [
				{
					"type": "float",
					"name": "radius"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetSunLightIntensity",
			"description": "Sets the Sun Light Intensity",
			"parameters": [
				{
					"type": "float",
					"name": "intensity"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetSkyMode",
			"description": "Sets the Sky Mode",
			"description_long": "Sets the Sky Mode<br /><br />After setting it, you must call <code>Sky.Reconstruct()</code> to have it applied properly",
			"parameters": [
				{
					"type": "SkyMode",
					"name": "sky_mode"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetVolumetricCloudColor",
			"description": "Sets the Volumetric Cloud Color",
			"description_long": "Sets the Volumetric Cloud Color<br /><br />This is only applied if <code>SetSkyMode(SkyMode.VolumetricClouds)</code> is set",
			"parameters": [
				{
					"type": "Color",
					"name": "color"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetCloudCoverage",
			"description": "The amount of coverage for the cloud layer, from a clear sky to overcast",
			"parameters": [
				{
					"type": "float",
					"name": "cloud_coverage"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetFog",
			"description": "The fogginess of the scene. The impact this has on fog density is scaled from the Fog Density category",
			"parameters": [
				{
					"type": "float",
					"name": "fog_percentage"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetContrast",
			"description": "A simple contrast boost for the sky material. Cannot affect volumetric clouds",
			"parameters": [
				{
					"type": "float",
					"name": "contrast"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetOverallIntensity",
			"description": "The overall brightness of the shader",
			"parameters": [
				{
					"type": "float",
					"name": "intensity"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetNightBrightness",
			"description": "Can be used to scale the brightness of the sky and lighting, at night",
			"parameters": [
				{
					"type": "float",
					"name": "brightness"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetAnimateTimeOfDay",
			"description": "Sets whether or not to animate the time of day",
			"parameters": [
				{
					"type": "boolean",
					"name": "animate",
					"description": "Whether or not to animate the time of day"
				},
				{
					"type": "float?",
					"name": "day_length",
					"default": "30.0",
					"description": "The time (in minutes) from sunrise to sunset"
				},
				{
					"type": "float?",
					"name": "night_length",
					"default": "15.0",
					"description": "The time (in minutes) from sunset to sunrise"
				}
			]
		},
		{
			"authority": "client",
			"name": "SetTimeOfDay",
			"description": "Sets the current time",
			"parameters": [
				{
					"type": "integer",
					"name": "hours"
				},
				{
					"type": "integer",
					"name": "minutes"
				}
			]
		},
		{
			"authority": "client",
			"name": "GetTimeOfDay",
			"description": "Gets the current time",
			"return": [
				{
					"type": "integer",
					"description": "hours"
				},
				{
					"type": "integer",
					"description": "minutes"
				},
				{
					"type": "integer",
					"description": "seconds"
				}
			]
		},
		{
			"authority": "client",
			"name": "IsSpawned",
			"description": "Returns if the Ultra Dynamic Sky was spawned",
			"parameters": [
				{
					"type": "boolean",
					"name": "including_weather",
					"description": "if to check for Weather Actor too"
				}
			],
			"return": [
				{
					"type": "boolean"
				}
			]
		},
		{
			"authority": "client",
			"name": "GetWeather",
			"description": "Gets the current weather",
			"return": [
				{
					"type": "WeatherType"
				}
			]
		},
		{
			"authority": "client",
			"name": "ChangeWeather",
			"description": "Changes the current weather",
			"parameters": [
				{
					"type": "WeatherType",
					"name": "weather",
					"description": "weather to change"
				},
				{
					"type": "float",
					"name": "transition_time",
					"description": "fade time to completely change to new weather"
				}
			]
		}
	]
}