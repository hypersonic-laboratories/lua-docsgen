---
base: lua52
name: helix
globals:
  AimMode.None:
    property: read-only
  AimMode.ADS:
    property: read-only
  AimMode.ZoomedZoom:
    property: read-only
  AimMode.Zoomed:
    property: read-only
  AimMode.ZoomedFar:
    property: read-only
  AnimationSlotType.FullBody:
    property: read-only
  AnimationSlotType.UpperBody:
    property: read-only
  AssetType.Map:
    property: read-only
  AssetType.StaticMesh:
    property: read-only
  AssetType.SkeletalMesh:
    property: read-only
  AssetType.Sound:
    property: read-only
  AssetType.Animation:
    property: read-only
  AssetType.Particle:
    property: read-only
  AssetType.Material:
    property: read-only
  AssetType.Blueprint:
    property: read-only
  AttachmentRule.KeepRelative:
    property: read-only
  AttachmentRule.KeepWorld:
    property: read-only
  AttachmentRule.SnapToTarget:
    property: read-only
  AttenuationFunction.Linear:
    property: read-only
  AttenuationFunction.Logarithmic:
    property: read-only
  AttenuationFunction.Inverse:
    property: read-only
  AttenuationFunction.LogReverse:
    property: read-only
  AttenuationFunction.NaturalSound:
    property: read-only
  BlendMode.Opaque:
    property: read-only
  BlendMode.Masked:
    property: read-only
  BlendMode.Translucent:
    property: read-only
  BlendMode.Additive:
    property: read-only
  BlendMode.Modulate:
    property: read-only
  BlendMode.MaskedDistanceField:
    property: read-only
  BlendMode.MaskedDistanceFieldShadowed:
    property: read-only
  BlendMode.TranslucentDistanceField:
    property: read-only
  BlendMode.TranslucentDistanceFieldShadowed:
    property: read-only
  BlendMode.AlphaComposite:
    property: read-only
  BlendMode.AlphaHoldout:
    property: read-only
  BlendMode.AlphaBlend:
    property: read-only
  BlendMode.TranslucentAlphaOnly:
    property: read-only
  BlendMode.TranslucentAlphaOnlyWriteAlpha:
    property: read-only
  CameraMode.FPSTPS:
    property: read-only
  CameraMode.FPSOnly:
    property: read-only
  CameraMode.TPSOnly:
    property: read-only
  CCDMode.Auto:
    property: read-only
  CCDMode.Disabled:
    property: read-only
  CCDMode.Enabled:
    property: read-only
  CollisionChannel.WorldStatic:
    property: read-only
  CollisionChannel.WorldDynamic:
    property: read-only
  CollisionChannel.Pawn:
    property: read-only
  CollisionChannel.PhysicsBody:
    property: read-only
  CollisionChannel.Mesh:
    property: read-only
  CollisionChannel.Water:
    property: read-only
  CollisionChannel.Foliage:
    property: read-only
  CollisionChannel.Vehicle:
    property: read-only
  CollisionType.Normal:
    property: read-only
  CollisionType.StaticOnly:
    property: read-only
  CollisionType.NoCollision:
    property: read-only
  CollisionType.IgnoreOnlyPawn:
    property: read-only
  CollisionType.Auto:
    property: read-only
  CursorType.None:
    property: read-only
  CursorType.Default:
    property: read-only
  CursorType.TextEditBeam:
    property: read-only
  CursorType.ResizeLeftRight:
    property: read-only
  CursorType.ResizeUpDown:
    property: read-only
  CursorType.ResizeSouthEast:
    property: read-only
  CursorType.ResizeSouthWest:
    property: read-only
  CursorType.CardinalCross:
    property: read-only
  CursorType.Crosshairs:
    property: read-only
  CursorType.Hand:
    property: read-only
  CursorType.GrabHand:
    property: read-only
  CursorType.GrabHandClosed:
    property: read-only
  CursorType.SlashedCircle:
    property: read-only
  CursorType.EyeDropper:
    property: read-only
  ConstraintMotion.Free:
    property: read-only
  ConstraintMotion.Limited:
    property: read-only
  ConstraintMotion.Locked:
    property: read-only
  DamageType.Shot:
    property: read-only
  DamageType.Explosion:
    property: read-only
  DamageType.Punch:
    property: read-only
  DamageType.Fall:
    property: read-only
  DamageType.RunOverProp:
    property: read-only
  DamageType.RunOverVehicle:
    property: read-only
  DamageType.Melee:
    property: read-only
  DamageType.Unknown:
    property: read-only
  DatabaseEngine.SQLite:
    property: read-only
  DatabaseEngine.MySQL:
    property: read-only
  DatabaseEngine.PostgreSQL:
    property: read-only
  FallingMode.None:
    property: read-only
  FallingMode.Jumping:
    property: read-only
  FallingMode.Climbing:
    property: read-only
  FallingMode.Vaulting:
    property: read-only
  FallingMode.Falling:
    property: read-only
  FallingMode.HighFalling:
    property: read-only
  FallingMode.Parachuting:
    property: read-only
  FallingMode.SkyDiving:
    property: read-only
  FontType.Roboto:
    property: read-only
  FontType.GothicA1:
    property: read-only
  FontType.PoiretOne:
    property: read-only
  FontType.Oswald:
    property: read-only
  FontType.RobotoMono:
    property: read-only
  FontType.OpenSans:
    property: read-only
  GaitMode.None:
    property: read-only
  GaitMode.Walking:
    property: read-only
  GaitMode.Sprinting:
    property: read-only
  GrabMode.Disabled:
    property: read-only
  GrabMode.Auto:
    property: read-only
  GrabMode.Enabled:
    property: read-only
  HighlightMode.Always:
    property: read-only
  HighlightMode.OnlyHidden:
    property: read-only
  HighlightMode.OnlyVisible:
    property: read-only
  HandlingMode.SingleHandedWeapon:
    property: read-only
  HandlingMode.DoubleHandedWeapon:
    property: read-only
  HandlingMode.SingleHandedMelee:
    property: read-only
  HandlingMode.DoubleHandedMelee:
    property: read-only
  HandlingMode.Throwable:
    property: read-only
  HandlingMode.Torch:
    property: read-only
  HandlingMode.Barrel:
    property: read-only
  HandlingMode.Box:
    property: read-only
  ImageFormat.JPEG:
    property: read-only
  ImageFormat.PNG:
    property: read-only
  ImageFormat.BMP:
    property: read-only
  InputEvent.Pressed:
    property: read-only
  InputEvent.Released:
    property: read-only
  KeyModifier.None:
    property: read-only
  KeyModifier.LeftShiftDown:
    property: read-only
  KeyModifier.RightShiftDown:
    property: read-only
  KeyModifier.LeftControlDown:
    property: read-only
  KeyModifier.RightControlDown:
    property: read-only
  KeyModifier.LeftAltDown:
    property: read-only
  KeyModifier.RightAltDown:
    property: read-only
  KeyModifier.LeftCommandDown:
    property: read-only
  KeyModifier.RightCommandDown:
    property: read-only
  KeyModifier.CapsLocked:
    property: read-only
  LightProfile.None:
    property: read-only
  LightProfile.Arrow_Star:
    property: read-only
  LightProfile.Arrow_Up:
    property: read-only
  LightProfile.Beam_01:
    property: read-only
  LightProfile.Beam_02:
    property: read-only
  LightProfile.Beam_03:
    property: read-only
  LightProfile.Beam_04:
    property: read-only
  LightProfile.Beam_05:
    property: read-only
  LightProfile.Beam_06:
    property: read-only
  LightProfile.Beam_07:
    property: read-only
  LightProfile.Beam_08:
    property: read-only
  LightProfile.Beam_LED_01:
    property: read-only
  LightProfile.Beam_LED_02:
    property: read-only
  LightProfile.Beam_LED_03:
    property: read-only
  LightProfile.Beam_LED_04:
    property: read-only
  LightProfile.Beam_LED_05:
    property: read-only
  LightProfile.Beam_LED_06:
    property: read-only
  LightProfile.Beam_LED_07:
    property: read-only
  LightProfile.Bow:
    property: read-only
  LightProfile.Capped_01:
    property: read-only
  LightProfile.Capped_02:
    property: read-only
  LightProfile.Shattered_01:
    property: read-only
  LightProfile.Shattered_02:
    property: read-only
  LightProfile.Shattered_03:
    property: read-only
  LightProfile.Shattered_04:
    property: read-only
  LightProfile.Shattered_05:
    property: read-only
  LightProfile.SpotLight_01:
    property: read-only
  LightProfile.SpotLight_02:
    property: read-only
  LightProfile.SpotLight_03:
    property: read-only
  LightProfile.SpotLight_04:
    property: read-only
  LightProfile.Spreadout_01:
    property: read-only
  LightProfile.Spreadout_02:
    property: read-only
  LightProfile.Spreadout_03:
    property: read-only
  LightProfile.Spreadout_04:
    property: read-only
  LightProfile.Star_Bow:
    property: read-only
  LightProfile.Star_Burst_01:
    property: read-only
  LightProfile.Star_Burst_02:
    property: read-only
  LightProfile.Star_Burst_03:
    property: read-only
  LightProfile.Star_Burst_04:
    property: read-only
  LightProfile.Star_Burst_05:
    property: read-only
  LightProfile.Star_Burst_06:
    property: read-only
  LightProfile.Star_Burst_07:
    property: read-only
  LightProfile.Star_Burst_08:
    property: read-only
  LightProfile.Star_X_01:
    property: read-only
  LightProfile.Star_X_02:
    property: read-only
  LightProfile.Wall_Boomerang:
    property: read-only
  LightProfile.Wall_Inverted_V:
    property: read-only
  LightProfile.Wall_Star_T:
    property: read-only
  LightProfile.Wing_6:
    property: read-only
  LightProfile.Wing_V_01:
    property: read-only
  LightProfile.Wing_V_02:
    property: read-only
  LogType.Display:
    property: read-only
  LogType.Warning:
    property: read-only
  LogType.Error:
    property: read-only
  LogType.Debug:
    property: read-only
  LogType.Verbose:
    property: read-only
  LogType.Scripting:
    property: read-only
  LogType.ScriptingWarn:
    property: read-only
  LogType.ScriptingError:
    property: read-only
  LogType.Chat:
    property: read-only
  LogType.WebUI:
    property: read-only
  LogType.Success:
    property: read-only
  LogType.Fatal:
    property: read-only
  LightType.Point:
    property: read-only
  LightType.Spot:
    property: read-only
  LightType.React:
    property: read-only
  NativeWidget.Border:
    property: read-only
  NativeWidget.Button:
    property: read-only
  NativeWidget.CheckBox:
    property: read-only
  NativeWidget.Image:
    property: read-only
  NativeWidget.ProgressBar:
    property: read-only
  NativeWidget.RichTextBlock:
    property: read-only
  NativeWidget.Slider:
    property: read-only
  NativeWidget.Text:
    property: read-only
  NativeWidget.ComboBox:
    property: read-only
  NativeWidget.EditableText:
    property: read-only
  NativeWidget.EditableTextMultiLine:
    property: read-only
  NativeWidget.SpinBox:
    property: read-only
  NativeWidget.TextBox:
    property: read-only
  NativeWidget.TextBoxMultiLine:
    property: read-only
  NativeWidget.CanvasPanel:
    property: read-only
  NativeWidget.GridPanel:
    property: read-only
  NativeWidget.HorizontalBox:
    property: read-only
  NativeWidget.Overlay:
    property: read-only
  NativeWidget.ScaleBox:
    property: read-only
  NativeWidget.ScrollBox:
    property: read-only
  NativeWidget.SizeBox:
    property: read-only
  NativeWidget.UniformGridPanel:
    property: read-only
  NativeWidget.VerticalBox:
    property: read-only
  NativeWidget.WrapBox:
    property: read-only
  NativeWidget.BackgroundBlur:
    property: read-only
  PackageType.Script:
    property: read-only
  PackageType.GameMode:
    property: read-only
  PackageType.LoadingScreen:
    property: read-only
  PackageType.Map:
    property: read-only
  SkyMode.VolumetricClouds:
    property: read-only
  SkyMode.StaticClouds:
    property: read-only
  SkyMode.DynamicClouds2D:
    property: read-only
  SkyMode.NoClouds:
    property: read-only
  SkyMode.VolumetricAurora:
    property: read-only
  SkyMode.Space:
    property: read-only
  SoundType.SFX:
    property: read-only
  SoundType.Music:
    property: read-only
  SoundType.UI:
    property: read-only
  SoundLoopMode.Default:
    property: read-only
  SoundLoopMode.Forever:
    property: read-only
  SoundLoopMode.Never:
    property: read-only
  StanceMode.None:
    property: read-only
  StanceMode.Standing:
    property: read-only
  StanceMode.Crouching:
    property: read-only
  StanceMode.Proning:
    property: read-only
  SteeringType.SingleAngle:
    property: read-only
  SteeringType.AngleRatio:
    property: read-only
  SteeringType.Ackermann:
    property: read-only
  SurfaceType.Default:
    property: read-only
  SurfaceType.Carpet:
    property: read-only
  SurfaceType.Concrete:
    property: read-only
  SurfaceType.Grass:
    property: read-only
  SurfaceType.Gravel:
    property: read-only
  SurfaceType.Ground:
    property: read-only
  SurfaceType.MetalLight:
    property: read-only
  SurfaceType.Plastic:
    property: read-only
  SurfaceType.Sand:
    property: read-only
  SurfaceType.Snow:
    property: read-only
  SurfaceType.Water:
    property: read-only
  SurfaceType.WoodLight:
    property: read-only
  SurfaceType.Flesh:
    property: read-only
  SurfaceType.MetalHeavy:
    property: read-only
  SurfaceType.WoodHeavy:
    property: read-only
  SurfaceType.Ice:
    property: read-only
  SurfaceType.Mud:
    property: read-only
  SurfaceType.Rock:
    property: read-only
  SurfaceType.Thump:
    property: read-only
  SurfaceType.Glass:
    property: read-only
  SurfaceType.Rubber:
    property: read-only
  SurfaceType.Air:
    property: read-only
  SwimmingMode.None:
    property: read-only
  SwimmingMode.Surface:
    property: read-only
  SwimmingMode.Underwater:
    property: read-only
  TextRenderAlignCamera.Unaligned:
    property: read-only
  TextRenderAlignCamera.AlignCameraRotation:
    property: read-only
  TextRenderAlignCamera.FaceCamera:
    property: read-only
  TextRenderBevelType.Linear:
    property: read-only
  TextRenderBevelType.HalfCircle:
    property: read-only
  TextRenderBevelType.Convex:
    property: read-only
  TextRenderBevelType.Concave:
    property: read-only
  TextRenderBevelType.OneStep:
    property: read-only
  TextRenderBevelType.TwoSteps:
    property: read-only
  TextRenderBevelType.Engraved:
    property: read-only
  TextRenderHorizontalAlignment.Left:
    property: read-only
  TextRenderHorizontalAlignment.Center:
    property: read-only
  TextRenderHorizontalAlignment.Right:
    property: read-only
  TextRenderVerticalAlignment.Top:
    property: read-only
  TextRenderVerticalAlignment.Center:
    property: read-only
  TextRenderVerticalAlignment.Bottom:
    property: read-only
  TextRenderVerticalAlignment.QuadTop:
    property: read-only
  TriggerType.Sphere:
    property: read-only
  TriggerType.Box:
    property: read-only
  TraceMode.DrawDebug:
    property: read-only
  TraceMode.TraceComplex:
    property: read-only
  TraceMode.ReturnPhysicalMaterial:
    property: read-only
  TraceMode.ReturnEntity:
    property: read-only
  TraceMode.ReturnNames:
    property: read-only
  TraceMode.ReturnUV:
    property: read-only
  ViewMode.FPS:
    property: read-only
  ViewMode.TPS1:
    property: read-only
  ViewMode.TPS2:
    property: read-only
  ViewMode.TPS3:
    property: read-only
  ViewMode.TopDown:
    property: read-only
  VOIPSetting.Local:
    property: read-only
  VOIPSetting.Global:
    property: read-only
  VOIPSetting.Muted:
    property: read-only
  WeatherType.ClearSkies:
    property: read-only
  WeatherType.Cloudy:
    property: read-only
  WeatherType.Foggy:
    property: read-only
  WeatherType.Overcast:
    property: read-only
  WeatherType.PartlyCloudy:
    property: read-only
  WeatherType.Rain:
    property: read-only
  WeatherType.RainLight:
    property: read-only
  WeatherType.RainThunderstorm:
    property: read-only
  WeatherType.SandDustCalm:
    property: read-only
  WeatherType.SandDustStorm:
    property: read-only
  WeatherType.Snow:
    property: read-only
  WeatherType.SnowBlizzard:
    property: read-only
  WeatherType.SnowLight:
    property: read-only
  WebUIModifier.None:
    property: read-only
  WebUIModifier.CapsLockOn:
    property: read-only
  WebUIModifier.ShiftDown:
    property: read-only
  WebUIModifier.ControlDown:
    property: read-only
  WebUIModifier.AltDown:
    property: read-only
  WebUIModifier.LeftMouseButton:
    property: read-only
  WebUIModifier.MiddleMouseButton:
    property: read-only
  WebUIModifier.RightMouseButton:
    property: read-only
  WebUIModifier.CommandDown:
    property: read-only
  WebUIModifier.NumLockOn:
    property: read-only
  WebUIModifier.IsKeyPad:
    property: read-only
  WebUIModifier.IsLeft:
    property: read-only
  WebUIModifier.IsRight:
    property: read-only
  WebUIModifier.AltgrDown:
    property: read-only
  WebUIModifier.IsRepeat:
    property: read-only
  WebUIKeyType.Down:
    property: read-only
  WebUIKeyType.Up:
    property: read-only
  WebUIKeyType.Char:
    property: read-only
  WebUIMouseType.Left:
    property: read-only
  WebUIMouseType.Right:
    property: read-only
  WebUIMouseType.Middle:
    property: read-only
  WidgetVisibility.Hidden:
    property: read-only
  WidgetVisibility.Visible:
    property: read-only
  WidgetVisibility.VisibleNotHitTestable:
    property: read-only

  StaticMesh:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
  Billboard:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: string
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: boolean
  Decal:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: number
      - required: false
        type: number
  HELIXAircraft:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  HELIXTable.Dump:
    args:
      - type: table
  HELIXTable.ShallowCopy:
    args:
      - type: table
  TextRender:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: FontType
      - required: false
        type: 
          display: TextRenderAlignCamera
  Sound:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: string
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: SoundType
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: 
          display: AttenuationFunction
      - required: false
        type: boolean
      - required: false
        type: 
          display: SoundLoopMode
  Trigger:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Vector
      - required: false
        type: 
          display: TriggerType
      - required: false
        type: boolean
      - required: false
        type: 
          display: Color
      - required: false
        type: string[]
  Blueprint:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: string
  Grenade:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Particle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: boolean
      - required: false
        type: boolean
  SceneCapture:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
  Cable:
    must_use: true
    args:
      - type: 
          display: Vector
      - required: false
        type: boolean
  File:
    must_use: true
    args:
      - type: string
      - required: false
        type: boolean
  File.Time:
    args:
      - type: string
  File.CreateDirectory:
    args:
      - type: string
  File.Remove:
    args:
      - type: string
  File.Exists:
    args:
      - type: string
  File.IsDirectory:
    args:
      - type: string
  File.IsRegularFile:
    args:
      - type: string
  Prop:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: GrabMode
      - required: false
        type: 
          display: CCDMode
  Database:
    must_use: true
    args:
      - type: 
          display: DatabaseEngine
      - type: string
      - required: false
        type: 
          display: integer
  Light:
    must_use: true
    args:
      - type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: LightType
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: boolean
  HELIXUtils.IsEntityValid:
    args:
      - type: 
          display: any
  HELIXUtils.Benchmark:
    args:
      - type: string
      - type: number
      - type: function
      - type: 
          display: any
  WebUI:
    must_use: true
    args:
      - type: string
      - type: string
      - required: false
        type: 
          display: WidgetVisibility
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
  Debug.DrawBox:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawCoordinateSystem:
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: number
      - type: number
      - type: number
  Debug.DrawCrosshairs:
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: number
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawCylinder:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: 
          display: integer
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawDirectionalArrow:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: number
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawLine:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawPoint:
    args:
      - type: 
          display: Vector
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawSphere:
    args:
      - type: 
          display: Vector
      - type: number
      - type: 
          display: integer
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawString:
    args:
      - type: 
          display: Vector
      - type: string
      - required: false
        type: 
          display: Color
      - type: number
      - type: boolean
      - type: number
  Canvas:
    must_use: true
    args:
      - required: false
        type: boolean
      - required: false
        type: 
          display: Color
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: Vector2D
  HELIXVehicle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Entity.GetAll:
    args:[]
  Entity.GetByIndex:
    args:
      - type: 
          display: integer
  Entity.GetCount:
    args:[]
  Entity.GetPairs:
    args:[]
  Entity.Inherit:
    args:
      - type: string
      - required: false
        type: table
  Entity.GetInheritedClasses:
    args:
      - required: false
        type: boolean
  Entity.GetParentClass:
    args:[]
  Entity.IsChildOf:
    args:
      - type: table
  Entity.SubscribeRemote:
    args:
      - type: string
      - type: function
  HCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Player
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: string
      - required: false
        type: string
  HCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: string
      - required: false
        type: string
  Melee:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: HandlingMode
      - required: false
        type: string
      - required: false
        type: boolean
  CharacterSimple:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: any
      - required: false
        type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Vehicle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: string
  HSimpleVehicle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Blueprint Reference
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Character:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: string
      - required: false
        type: string
  HELIXCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: any
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  HELIXCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Player
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Input.Bind:
    args:
      - type: string
      - type: 
          display: InputEvent
      - type: function
  Input.Unbind:
    args:
      - type: string
      - type: 
          display: InputEvent
  Input.Register:
    args:
      - type: string
      - type: string
  Input.Unregister:
    args:
      - type: string
      - type: string
  Input.GetKeyIcon:
    args:
      - type: string
      - required: false
        type: boolean
  Input.GetKeyCode:
    args:
      - type: string
  Input.GetModifierKeys:
    args:[]
  Input.GetMappedKeys:
    args:
      - type: string
  Input.ResetBindings:
    args:[]
  Input.GetScriptingKeyBindings:
    args:[]
  Input.GetGameKeyBindings:
    args:[]
  Input.SetInputEnabled:
    args:
      - type: boolean
  Input.SetMouseEnabled:
    args:
      - type: boolean
  Input.SetMouseCursor:
    args:
      - type: 
          display: CursorType
  Input.InputKey:
    args:
      - type: string
      - type: 
          display: InputEvent
      - required: false
        type: number
  Input.IsKeyDown:
    args:
      - type: string
  Input.IsMouseEnabled:
    args:[]
  Input.IsInputEnabled:
    args:[]
  Input.Subscribe:
    args:
      - type: string
      - type: function
  Input.Unsubscribe:
    args:
      - type: string
      - type: function
  Assets.GetAssetPacks:
    args:[]
  Assets.GetAnimations:
    args:
      - type: string
  Assets.GetBlueprints:
    args:
      - type: string
  Assets.GetMaps:
    args:
      - type: string
  Assets.GetMaterials:
    args:
      - type: string
  Assets.GetParticles:
    args:
      - type: string
  Assets.GetSounds:
    args:
      - type: string
  Assets.GetSkeletalMeshes:
    args:
      - type: string
  Assets.GetStaticMeshes:
    args:
      - type: string
  Assets.GetOthers:
    args:
      - type: string
  Assets.Precache:
    args:
      - type: string
      - type: 
          display: AssetType
  Weapon:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Client.CopyToClipboard:
    args:
      - type: string
  Client.SetNearClipPlane:
    args:
      - type: number
  Client.GetNearClipPlane:
    args:[]
  Client.GetConnectedServerIP:
    args:[]
  Client.SetDebugEnabled:
    args:
      - type: boolean
  Client.SetHighlightColor:
    args:
      - type: 
          display: Color
      - type: 
          display: integer
      - required: false
        type: 
          display: HighlightMode
  Client.SetOutlineColor:
    args:
      - type: 
          display: Color
      - required: false
        type: 
          display: integer
      - required: false
        type: number
  Client.SetValue:
    args:
      - type: string
      - type: 
          display: any
  Client.GetLocalPlayer:
    args:[]
  Client.GetFrameTime:
    args:[]
  Client.GetTime:
    args:[]
  Client.GetMap:
    args:[]
  Client.GetPackages:
    args:[]
  Client.GetValue:
    args:
      - type: string
      - type: 
          display: any
  Client.Subscribe:
    args:
      - type: string
      - type: function
  Client.Unsubscribe:
    args:
      - type: string
      - type: function
  Widget:
    must_use: true
    args:
      - type: string
  Widget:
    must_use: true
    args:
      - type: 
          display: NativeWidget
  Payment.ChargePlayer:
    args:
      - type: 
          display: Player
      - type: 
          display: integer
      - type: string
      - type: string
      - type: string
      - type: function
  Payment.SellItem:
    args:
      - type: 
          display: Player
      - type: string
      - type: 
          display: integer
      - type: string
      - type: string
      - type: function
  Payment.Subscribe:
    args:
      - type: string
      - type: function
  Payment.Unsubscribe:
    args:
      - type: string
      - type: function
  PersistentDatabase.Create:
    args:
      - required: false
        type: function
  PersistentDatabase.Insert:
    args:
      - type: string
      - type: string
      - required: false
        type: function
  PersistentDatabase.Update:
    args:
      - type: string
      - type: string
      - required: false
        type: function
  PersistentDatabase.Delete:
    args:
      - type: string
      - required: false
        type: function
  PersistentDatabase.GetByKey:
    args:
      - type: string
      - required: false
        type: function
  PersistentDatabase.GetAll:
    args:
      - required: false
        type: function
  PersistentDatabase.GetSummary:
    args:
      - required: false
        type: function
  HTTP.RequestAsync:
    args:
      - type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: table
      - required: false
        type: function
  HTTP.Request:
    args:
      - type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: table
  HTTP.SetConnectionTimeout:
    args:
      - type: 
          display: integer
  HTTP.SetReadWriteTimeout:
    args:
      - type: 
          display: integer
  Level.LoadStreamLevel:
    args:
      - type: string
      - required: false
        type: boolean
      - required: false
        type: boolean
  Level.UnloadStreamLevel:
    args:
      - type: string
      - required: false
        type: boolean
  Level.SetStreamLevelVisibility:
    args:
      - type: string
      - type: boolean
  Level.GetStreamLevels:
    args:[]
  Level.CallLevelBlueprintEvent:
    args:
      - type: string
  Level.Subscribe:
    args:
      - type: string
      - type: function
  Level.Unsubscribe:
    args:
      - type: string
      - type: function
  Sky.Spawn:
    args:
      - required: false
        type: boolean
  Sky.DestroyAllSky:
    args:[]
  Sky.Reconstruct:
    args:[]
  Sky.SetMoonTexture:
    args:
      - type: string
  Sky.SetMoonTextureRotation:
    args:
      - type: number
  Sky.SetMoonVerticalOffset:
    args:
      - type: number
  Sky.SetMoonScale:
    args:
      - type: number
  Sky.SetMoonPhase:
    args:
      - type: number
  Sky.SetMoonGlowIntensity:
    args:
      - type: number
  Sky.SetMoonLightIntensity:
    args:
      - type: number
  Sky.SetSunAngle:
    args:
      - type: number
  Sky.SetSunRadius:
    args:
      - type: number
  Sky.SetSunLightIntensity:
    args:
      - type: number
  Sky.SetSkyMode:
    args:
      - type: 
          display: SkyMode
  Sky.SetVolumetricCloudColor:
    args:
      - type: 
          display: Color
  Sky.SetCloudCoverage:
    args:
      - type: number
  Sky.SetFog:
    args:
      - type: number
  Sky.SetContrast:
    args:
      - type: number
  Sky.SetOverallIntensity:
    args:
      - type: number
  Sky.SetNightBrightness:
    args:
      - type: number
  Sky.SetAnimateTimeOfDay:
    args:
      - type: boolean
      - required: false
        type: number
      - required: false
        type: number
  Sky.SetTimeOfDay:
    args:
      - type: 
          display: integer
      - type: 
          display: integer
  Sky.GetTimeOfDay:
    args:[]
  Sky.IsSpawned:
    args:
      - type: boolean
  Sky.GetWeather:
    args:[]
  Sky.ChangeWeather:
    args:
      - type: 
          display: WeatherType
      - type: number
  Console.Log:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Console.Warn:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Console.Error:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Console.RegisterCommand:
    args:
      - type: string
      - type: function
      - type: string
      - type: string[]
  Console.Subscribe:
    args:
      - type: string
      - type: function
  Console.Unsubscribe:
    args:
      - type: string
      - type: function
  Matchmaking.JoinMatchmaking:
    args:
      - type: string
      - type: 
          display: Player
      - type: 
          display: integer
      - type: function
  Matchmaking.CheckMatchmakingStatus:
    args:
      - type: string
      - type: function
  Matchmaking.LeaveMatchmaking:
    args:
      - type: string
      - type: 
          display: Player
      - type: function
  Matchmaking.LeaveAllMatchmaking:
    args:
      - type: 
          display: Player
      - type: function
  Package.Export:
    args:
      - type: string
      - type: 
          display: any
  Package.Require:
    args:
      - type: string
  Package.SetPersistentData:
    args:
      - type: string
      - type: 
          display: any
  Package.GetDirectories:
    args:
      - required: false
        type: string
  Package.GetFiles:
    args:
      - required: false
        type: any
      - required: false
        type: string
  Package.GetName:
    args:[]
  Package.GetTitle:
    args:[]
  Package.GetVersion:
    args:[]
  Package.GetCompatibilityVersion:
    args:[]
  Package.GetPersistentData:
    args:
      - required: false
        type: string
  Package.Subscribe:
    args:
      - type: string
      - type: function
  Package.Unsubscribe:
    args:
      - type: string
      - type: function
  Chat.AddMessage:
    args:
      - type: string
  Chat.SendMessage:
    args:
      - type: 
          display: Player
      - type: string
  Chat.SetConfiguration:
    args:
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: boolean
      - required: false
        type: boolean
  Chat.SetVisibility:
    args:
      - type: boolean
  Chat.Clear:
    args:[]
  Chat.BroadcastMessage:
    args:
      - type: string
  Chat.Subscribe:
    args:
      - type: string
      - type: function
  Chat.Unsubscribe:
    args:
      - type: string
      - type: function
  Server.ChangeMap:
    args:
      - type: string
  Server.LoadPackage:
    args:
      - type: string
  Server.ReloadPackage:
    args:
      - type: string
  Server.UnloadPackage:
    args:
      - type: string
  Server.SetDescription:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetLogo:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetMaxPlayers:
    args:
      - type: 
          display: integer
      - required: false
        type: boolean
  Server.SetName:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetPassword:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetValue:
    args:
      - type: string
      - type: 
          display: any
      - required: false
        type: boolean
  Server.GetValue:
    args:
      - type: string
      - type: 
          display: any
  Server.Unban:
    args:
      - type: string
  Server.Stop:
    args:[]
  Server.GetMap:
    args:[]
  Server.GetMapAsset:
    args:[]
  Server.GetMapConfig:
    args:[]
  Server.GetMapSpawnPoints:
    args:[]
  Server.GetPackages:
    args:
      - required: false
        type: boolean
      - required: false
        type: 
          display: PackageType
  Server.GetVersion:
    args:[]
  Server.GetIP:
    args:[]
  Server.GetPort:
    args:[]
  Server.GetQueryPort:
    args:[]
  Server.GetMaxPlayers:
    args:[]
  Server.GetDescription:
    args:[]
  Server.GetCustomSettings:
    args:[]
  Server.GetTickRate:
    args:[]
  Server.GetTime:
    args:[]
  Server.IsAnnounced:
    args:[]
  Server.Subscribe:
    args:
      - type: string
      - type: function
  Server.Unsubscribe:
    args:
      - type: string
      - type: function
  PostProcess.SetBloom:
    args:
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetChromaticAberration:
    args:
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetImageEffects:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetExposure:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetFilm:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetGlobalSaturation:
    args:
      - type: 
          display: Color
  PostProcess.SetLookupTable:
    args:
      - type: string
  PostProcess.SetMaterial:
    args:
      - type: string
  PostProcess.RemoveMaterial:
    args:[]
  PostProcess.SetSunAngle:
    args:
      - type: number
  Navigation.GetRandomReachablePointInRadius:
    args:
      - type: 
          display: Vector
      - type: number
  Navigation.GetRandomPointInNavigableRadius:
    args:
      - type: 
          display: Vector
      - type: number
  Navigation.FindPathToLocation:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
  Discord.Initialize:
    args:
      - type: 
          display: integer
  Discord.SetActivity:
    args:
      - type: string
      - type: string
      - type: string
      - type: string
      - required: false
        type: string
  JSON.stringify:
    args:
      - type: table
  JSON.parse:
    args:
      - type: string
  Quat:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Events.Call:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Events.CallRemote:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Events.CallRemote:
    args:
      - type: string
      - type: 
          display: Player
      - required: false
        type: 
          display: any
  Events.BroadcastRemote:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Events.BroadcastRemoteDimension:
    args:
      - type: 
          display: integer
      - type: string
      - required: false
        type: 
          display: any
  Events.Subscribe:
    args:
      - type: string
      - type: function
  Events.SubscribeRemote:
    args:
      - type: string
      - type: function
  Events.Unsubscribe:
    args:
      - type: string
      - required: false
        type: function
  Trace.LineSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.LineMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.SphereSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.SphereMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.BoxSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.BoxMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.CapsuleSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.CapsuleMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Matrix:
    must_use: true
    args:
      - type: 
          display: Rotator
      - type: 
          display: Vector
  Vector2D:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
  Vector:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Rotator:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Rotator.Random:
    args:
      - required: false
        type: boolean
  Viewport.ProjectWorldToScreen:
    args:
      - type: 
          display: Vector
  Viewport.DeprojectScreenToWorld:
    args:
      - type: 
          display: Vector2D
  Viewport.SetHardwareCursor:
    args:
      - type: 
          display: CursorType
      - type: string
      - required: false
        type: 
          display: Vector2D
  Viewport.GetViewportSize:
    args:[]
  Viewport.SetMousePosition:
    args:
      - type: 
          display: Vector2D
  Viewport.GetMousePosition:
    args:[]
  Viewport.SetCrosshairEnabled:
    args:
      - type: boolean
  Viewport.SetBloodScreenEnabled:
    args:
      - type: boolean
  Viewport.SetBloodScreenIntensity:
    args:
      - type: number
  Viewport.Subscribe:
    args:
      - type: string
      - type: function
  Viewport.Unsubscribe:
    args:
      - type: string
      - type: function
  Timer.SetTimeout:
    args:
      - type: function
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: any
  Timer.SetInterval:
    args:
      - type: function
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: any
  Timer.ClearTimeout:
    args:
      - type: 
          display: integer
  Timer.ClearInterval:
    args:
      - type: 
          display: integer
  Timer.Bind:
    args:
      - type: 
          display: integer
      - type: 
          display: Actor
  Timer.IsValid:
    args:
      - type: 
          display: integer
  Timer.GetElapsedTime:
    args:
      - type: 
          display: integer
  Timer.GetRemainingTime:
    args:
      - type: 
          display: integer
  Timer.Pause:
    args:
      - type: 
          display: integer
  Timer.Resume:
    args:
      - type: 
          display: integer
  Timer.ResetElapsedTime:
    args:
      - type: 
          display: integer
  Color:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.RandomPalette:
    args:
      - required: false
        type: boolean
  Color.Random:
    args:[]
  Color.FromRGBA:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromCYMK:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromHSL:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromHSV:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromHEX:
    args:
      - type: string
  HELIXMath.Round:
    args:
      - type: number
  HELIXMath.Clamp:
    args:
      - type: number
      - type: number
      - type: number
  HELIXMath.ClampAxis:
    args:
      - type: number
  HELIXMath.NormalizeAxis:
    args:
      - type: number
  HELIXMath.RelativeTo:
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Actor
  HELIXMath.FInterpTo:
    args:
      - type: number
      - type: number
      - type: number
      - type: number
  HELIXMath.RInterpTo:
    args:
      - type: 
          display: Rotator
      - type: 
          display: Rotator
      - type: number
      - type: number
  HELIXMath.RInterpConstantTo:
    args:
      - type: 
          display: Rotator
      - type: 
          display: Rotator
      - type: number
      - type: number
  HELIXMath.VInterpTo:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
  HELIXMath.VInterpConstantTo:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
structs:
  StaticMesh:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
  Billboard:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: string
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: boolean
  Decal:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: number
      - required: false
        type: number
  HELIXAircraft:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  HELIXTable.Dump:
    args:
      - type: table
  HELIXTable.ShallowCopy:
    args:
      - type: table
  TextRender:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: FontType
      - required: false
        type: 
          display: TextRenderAlignCamera
  Sound:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: string
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: SoundType
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: 
          display: AttenuationFunction
      - required: false
        type: boolean
      - required: false
        type: 
          display: SoundLoopMode
  Trigger:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Vector
      - required: false
        type: 
          display: TriggerType
      - required: false
        type: boolean
      - required: false
        type: 
          display: Color
      - required: false
        type: string[]
  Blueprint:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: string
  Grenade:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Particle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: boolean
      - required: false
        type: boolean
  SceneCapture:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
  Cable:
    must_use: true
    args:
      - type: 
          display: Vector
      - required: false
        type: boolean
  File:
    must_use: true
    args:
      - type: string
      - required: false
        type: boolean
  File.Time:
    args:
      - type: string
  File.CreateDirectory:
    args:
      - type: string
  File.Remove:
    args:
      - type: string
  File.Exists:
    args:
      - type: string
  File.IsDirectory:
    args:
      - type: string
  File.IsRegularFile:
    args:
      - type: string
  Prop:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: GrabMode
      - required: false
        type: 
          display: CCDMode
  Database:
    must_use: true
    args:
      - type: 
          display: DatabaseEngine
      - type: string
      - required: false
        type: 
          display: integer
  Light:
    must_use: true
    args:
      - type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: LightType
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: boolean
  HELIXUtils.IsEntityValid:
    args:
      - type: 
          display: any
  HELIXUtils.Benchmark:
    args:
      - type: string
      - type: number
      - type: function
      - type: 
          display: any
  WebUI:
    must_use: true
    args:
      - type: string
      - type: string
      - required: false
        type: 
          display: WidgetVisibility
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
  Debug.DrawBox:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawCoordinateSystem:
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: number
      - type: number
      - type: number
  Debug.DrawCrosshairs:
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: number
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawCylinder:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: 
          display: integer
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawDirectionalArrow:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: number
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawLine:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawPoint:
    args:
      - type: 
          display: Vector
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawSphere:
    args:
      - type: 
          display: Vector
      - type: number
      - type: 
          display: integer
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawString:
    args:
      - type: 
          display: Vector
      - type: string
      - required: false
        type: 
          display: Color
      - type: number
      - type: boolean
      - type: number
  Canvas:
    must_use: true
    args:
      - required: false
        type: boolean
      - required: false
        type: 
          display: Color
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: Vector2D
  HELIXVehicle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Entity.GetAll:
    args:[]
  Entity.GetByIndex:
    args:
      - type: 
          display: integer
  Entity.GetCount:
    args:[]
  Entity.GetPairs:
    args:[]
  Entity.Inherit:
    args:
      - type: string
      - required: false
        type: table
  Entity.GetInheritedClasses:
    args:
      - required: false
        type: boolean
  Entity.GetParentClass:
    args:[]
  Entity.IsChildOf:
    args:
      - type: table
  Entity.SubscribeRemote:
    args:
      - type: string
      - type: function
  HCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Player
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: string
      - required: false
        type: string
  HCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: string
      - required: false
        type: string
  Melee:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: HandlingMode
      - required: false
        type: string
      - required: false
        type: boolean
  CharacterSimple:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: any
      - required: false
        type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Vehicle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: string
  HSimpleVehicle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Blueprint Reference
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Character:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: string
      - required: false
        type: string
  HELIXCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: any
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  HELIXCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Player
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Input.Bind:
    args:
      - type: string
      - type: 
          display: InputEvent
      - type: function
  Input.Unbind:
    args:
      - type: string
      - type: 
          display: InputEvent
  Input.Register:
    args:
      - type: string
      - type: string
  Input.Unregister:
    args:
      - type: string
      - type: string
  Input.GetKeyIcon:
    args:
      - type: string
      - required: false
        type: boolean
  Input.GetKeyCode:
    args:
      - type: string
  Input.GetModifierKeys:
    args:[]
  Input.GetMappedKeys:
    args:
      - type: string
  Input.ResetBindings:
    args:[]
  Input.GetScriptingKeyBindings:
    args:[]
  Input.GetGameKeyBindings:
    args:[]
  Input.SetInputEnabled:
    args:
      - type: boolean
  Input.SetMouseEnabled:
    args:
      - type: boolean
  Input.SetMouseCursor:
    args:
      - type: 
          display: CursorType
  Input.InputKey:
    args:
      - type: string
      - type: 
          display: InputEvent
      - required: false
        type: number
  Input.IsKeyDown:
    args:
      - type: string
  Input.IsMouseEnabled:
    args:[]
  Input.IsInputEnabled:
    args:[]
  Input.Subscribe:
    args:
      - type: string
      - type: function
  Input.Unsubscribe:
    args:
      - type: string
      - type: function
  Assets.GetAssetPacks:
    args:[]
  Assets.GetAnimations:
    args:
      - type: string
  Assets.GetBlueprints:
    args:
      - type: string
  Assets.GetMaps:
    args:
      - type: string
  Assets.GetMaterials:
    args:
      - type: string
  Assets.GetParticles:
    args:
      - type: string
  Assets.GetSounds:
    args:
      - type: string
  Assets.GetSkeletalMeshes:
    args:
      - type: string
  Assets.GetStaticMeshes:
    args:
      - type: string
  Assets.GetOthers:
    args:
      - type: string
  Assets.Precache:
    args:
      - type: string
      - type: 
          display: AssetType
  Weapon:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Client.CopyToClipboard:
    args:
      - type: string
  Client.SetNearClipPlane:
    args:
      - type: number
  Client.GetNearClipPlane:
    args:[]
  Client.GetConnectedServerIP:
    args:[]
  Client.SetDebugEnabled:
    args:
      - type: boolean
  Client.SetHighlightColor:
    args:
      - type: 
          display: Color
      - type: 
          display: integer
      - required: false
        type: 
          display: HighlightMode
  Client.SetOutlineColor:
    args:
      - type: 
          display: Color
      - required: false
        type: 
          display: integer
      - required: false
        type: number
  Client.SetValue:
    args:
      - type: string
      - type: 
          display: any
  Client.GetLocalPlayer:
    args:[]
  Client.GetFrameTime:
    args:[]
  Client.GetTime:
    args:[]
  Client.GetMap:
    args:[]
  Client.GetPackages:
    args:[]
  Client.GetValue:
    args:
      - type: string
      - type: 
          display: any
  Client.Subscribe:
    args:
      - type: string
      - type: function
  Client.Unsubscribe:
    args:
      - type: string
      - type: function
  Widget:
    must_use: true
    args:
      - type: string
  Widget:
    must_use: true
    args:
      - type: 
          display: NativeWidget
  Payment.ChargePlayer:
    args:
      - type: 
          display: Player
      - type: 
          display: integer
      - type: string
      - type: string
      - type: string
      - type: function
  Payment.SellItem:
    args:
      - type: 
          display: Player
      - type: string
      - type: 
          display: integer
      - type: string
      - type: string
      - type: function
  Payment.Subscribe:
    args:
      - type: string
      - type: function
  Payment.Unsubscribe:
    args:
      - type: string
      - type: function
  PersistentDatabase.Create:
    args:
      - required: false
        type: function
  PersistentDatabase.Insert:
    args:
      - type: string
      - type: string
      - required: false
        type: function
  PersistentDatabase.Update:
    args:
      - type: string
      - type: string
      - required: false
        type: function
  PersistentDatabase.Delete:
    args:
      - type: string
      - required: false
        type: function
  PersistentDatabase.GetByKey:
    args:
      - type: string
      - required: false
        type: function
  PersistentDatabase.GetAll:
    args:
      - required: false
        type: function
  PersistentDatabase.GetSummary:
    args:
      - required: false
        type: function
  HTTP.RequestAsync:
    args:
      - type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: table
      - required: false
        type: function
  HTTP.Request:
    args:
      - type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: table
  HTTP.SetConnectionTimeout:
    args:
      - type: 
          display: integer
  HTTP.SetReadWriteTimeout:
    args:
      - type: 
          display: integer
  Level.LoadStreamLevel:
    args:
      - type: string
      - required: false
        type: boolean
      - required: false
        type: boolean
  Level.UnloadStreamLevel:
    args:
      - type: string
      - required: false
        type: boolean
  Level.SetStreamLevelVisibility:
    args:
      - type: string
      - type: boolean
  Level.GetStreamLevels:
    args:[]
  Level.CallLevelBlueprintEvent:
    args:
      - type: string
  Level.Subscribe:
    args:
      - type: string
      - type: function
  Level.Unsubscribe:
    args:
      - type: string
      - type: function
  Sky.Spawn:
    args:
      - required: false
        type: boolean
  Sky.DestroyAllSky:
    args:[]
  Sky.Reconstruct:
    args:[]
  Sky.SetMoonTexture:
    args:
      - type: string
  Sky.SetMoonTextureRotation:
    args:
      - type: number
  Sky.SetMoonVerticalOffset:
    args:
      - type: number
  Sky.SetMoonScale:
    args:
      - type: number
  Sky.SetMoonPhase:
    args:
      - type: number
  Sky.SetMoonGlowIntensity:
    args:
      - type: number
  Sky.SetMoonLightIntensity:
    args:
      - type: number
  Sky.SetSunAngle:
    args:
      - type: number
  Sky.SetSunRadius:
    args:
      - type: number
  Sky.SetSunLightIntensity:
    args:
      - type: number
  Sky.SetSkyMode:
    args:
      - type: 
          display: SkyMode
  Sky.SetVolumetricCloudColor:
    args:
      - type: 
          display: Color
  Sky.SetCloudCoverage:
    args:
      - type: number
  Sky.SetFog:
    args:
      - type: number
  Sky.SetContrast:
    args:
      - type: number
  Sky.SetOverallIntensity:
    args:
      - type: number
  Sky.SetNightBrightness:
    args:
      - type: number
  Sky.SetAnimateTimeOfDay:
    args:
      - type: boolean
      - required: false
        type: number
      - required: false
        type: number
  Sky.SetTimeOfDay:
    args:
      - type: 
          display: integer
      - type: 
          display: integer
  Sky.GetTimeOfDay:
    args:[]
  Sky.IsSpawned:
    args:
      - type: boolean
  Sky.GetWeather:
    args:[]
  Sky.ChangeWeather:
    args:
      - type: 
          display: WeatherType
      - type: number
  Console.Log:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Console.Warn:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Console.Error:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Console.RegisterCommand:
    args:
      - type: string
      - type: function
      - type: string
      - type: string[]
  Console.Subscribe:
    args:
      - type: string
      - type: function
  Console.Unsubscribe:
    args:
      - type: string
      - type: function
  Matchmaking.JoinMatchmaking:
    args:
      - type: string
      - type: 
          display: Player
      - type: 
          display: integer
      - type: function
  Matchmaking.CheckMatchmakingStatus:
    args:
      - type: string
      - type: function
  Matchmaking.LeaveMatchmaking:
    args:
      - type: string
      - type: 
          display: Player
      - type: function
  Matchmaking.LeaveAllMatchmaking:
    args:
      - type: 
          display: Player
      - type: function
  Package.Export:
    args:
      - type: string
      - type: 
          display: any
  Package.Require:
    args:
      - type: string
  Package.SetPersistentData:
    args:
      - type: string
      - type: 
          display: any
  Package.GetDirectories:
    args:
      - required: false
        type: string
  Package.GetFiles:
    args:
      - required: false
        type: any
      - required: false
        type: string
  Package.GetName:
    args:[]
  Package.GetTitle:
    args:[]
  Package.GetVersion:
    args:[]
  Package.GetCompatibilityVersion:
    args:[]
  Package.GetPersistentData:
    args:
      - required: false
        type: string
  Package.Subscribe:
    args:
      - type: string
      - type: function
  Package.Unsubscribe:
    args:
      - type: string
      - type: function
  Chat.AddMessage:
    args:
      - type: string
  Chat.SendMessage:
    args:
      - type: 
          display: Player
      - type: string
  Chat.SetConfiguration:
    args:
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: boolean
      - required: false
        type: boolean
  Chat.SetVisibility:
    args:
      - type: boolean
  Chat.Clear:
    args:[]
  Chat.BroadcastMessage:
    args:
      - type: string
  Chat.Subscribe:
    args:
      - type: string
      - type: function
  Chat.Unsubscribe:
    args:
      - type: string
      - type: function
  Server.ChangeMap:
    args:
      - type: string
  Server.LoadPackage:
    args:
      - type: string
  Server.ReloadPackage:
    args:
      - type: string
  Server.UnloadPackage:
    args:
      - type: string
  Server.SetDescription:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetLogo:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetMaxPlayers:
    args:
      - type: 
          display: integer
      - required: false
        type: boolean
  Server.SetName:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetPassword:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetValue:
    args:
      - type: string
      - type: 
          display: any
      - required: false
        type: boolean
  Server.GetValue:
    args:
      - type: string
      - type: 
          display: any
  Server.Unban:
    args:
      - type: string
  Server.Stop:
    args:[]
  Server.GetMap:
    args:[]
  Server.GetMapAsset:
    args:[]
  Server.GetMapConfig:
    args:[]
  Server.GetMapSpawnPoints:
    args:[]
  Server.GetPackages:
    args:
      - required: false
        type: boolean
      - required: false
        type: 
          display: PackageType
  Server.GetVersion:
    args:[]
  Server.GetIP:
    args:[]
  Server.GetPort:
    args:[]
  Server.GetQueryPort:
    args:[]
  Server.GetMaxPlayers:
    args:[]
  Server.GetDescription:
    args:[]
  Server.GetCustomSettings:
    args:[]
  Server.GetTickRate:
    args:[]
  Server.GetTime:
    args:[]
  Server.IsAnnounced:
    args:[]
  Server.Subscribe:
    args:
      - type: string
      - type: function
  Server.Unsubscribe:
    args:
      - type: string
      - type: function
  PostProcess.SetBloom:
    args:
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetChromaticAberration:
    args:
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetImageEffects:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetExposure:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetFilm:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetGlobalSaturation:
    args:
      - type: 
          display: Color
  PostProcess.SetLookupTable:
    args:
      - type: string
  PostProcess.SetMaterial:
    args:
      - type: string
  PostProcess.RemoveMaterial:
    args:[]
  PostProcess.SetSunAngle:
    args:
      - type: number
  Navigation.GetRandomReachablePointInRadius:
    args:
      - type: 
          display: Vector
      - type: number
  Navigation.GetRandomPointInNavigableRadius:
    args:
      - type: 
          display: Vector
      - type: number
  Navigation.FindPathToLocation:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
  Discord.Initialize:
    args:
      - type: 
          display: integer
  Discord.SetActivity:
    args:
      - type: string
      - type: string
      - type: string
      - type: string
      - required: false
        type: string
  JSON.stringify:
    args:
      - type: table
  JSON.parse:
    args:
      - type: string
  Quat:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Events.Call:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Events.CallRemote:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Events.CallRemote:
    args:
      - type: string
      - type: 
          display: Player
      - required: false
        type: 
          display: any
  Events.BroadcastRemote:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Events.BroadcastRemoteDimension:
    args:
      - type: 
          display: integer
      - type: string
      - required: false
        type: 
          display: any
  Events.Subscribe:
    args:
      - type: string
      - type: function
  Events.SubscribeRemote:
    args:
      - type: string
      - type: function
  Events.Unsubscribe:
    args:
      - type: string
      - required: false
        type: function
  Trace.LineSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.LineMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.SphereSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.SphereMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.BoxSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.BoxMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.CapsuleSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.CapsuleMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Matrix:
    must_use: true
    args:
      - type: 
          display: Rotator
      - type: 
          display: Vector
  Vector2D:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
  Vector:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Rotator:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Rotator.Random:
    args:
      - required: false
        type: boolean
  Viewport.ProjectWorldToScreen:
    args:
      - type: 
          display: Vector
  Viewport.DeprojectScreenToWorld:
    args:
      - type: 
          display: Vector2D
  Viewport.SetHardwareCursor:
    args:
      - type: 
          display: CursorType
      - type: string
      - required: false
        type: 
          display: Vector2D
  Viewport.GetViewportSize:
    args:[]
  Viewport.SetMousePosition:
    args:
      - type: 
          display: Vector2D
  Viewport.GetMousePosition:
    args:[]
  Viewport.SetCrosshairEnabled:
    args:
      - type: boolean
  Viewport.SetBloodScreenEnabled:
    args:
      - type: boolean
  Viewport.SetBloodScreenIntensity:
    args:
      - type: number
  Viewport.Subscribe:
    args:
      - type: string
      - type: function
  Viewport.Unsubscribe:
    args:
      - type: string
      - type: function
  Timer.SetTimeout:
    args:
      - type: function
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: any
  Timer.SetInterval:
    args:
      - type: function
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: any
  Timer.ClearTimeout:
    args:
      - type: 
          display: integer
  Timer.ClearInterval:
    args:
      - type: 
          display: integer
  Timer.Bind:
    args:
      - type: 
          display: integer
      - type: 
          display: Actor
  Timer.IsValid:
    args:
      - type: 
          display: integer
  Timer.GetElapsedTime:
    args:
      - type: 
          display: integer
  Timer.GetRemainingTime:
    args:
      - type: 
          display: integer
  Timer.Pause:
    args:
      - type: 
          display: integer
  Timer.Resume:
    args:
      - type: 
          display: integer
  Timer.ResetElapsedTime:
    args:
      - type: 
          display: integer
  Color:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.RandomPalette:
    args:
      - required: false
        type: boolean
  Color.Random:
    args:[]
  Color.FromRGBA:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromCYMK:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromHSL:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromHSV:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromHEX:
    args:
      - type: string
  HELIXMath.Round:
    args:
      - type: number
  HELIXMath.Clamp:
    args:
      - type: number
      - type: number
      - type: number
  HELIXMath.ClampAxis:
    args:
      - type: number
  HELIXMath.NormalizeAxis:
    args:
      - type: number
  HELIXMath.RelativeTo:
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Actor
  HELIXMath.FInterpTo:
    args:
      - type: number
      - type: number
      - type: number
      - type: number
  HELIXMath.RInterpTo:
    args:
      - type: 
          display: Rotator
      - type: 
          display: Rotator
      - type: number
      - type: number
  HELIXMath.RInterpConstantTo:
    args:
      - type: 
          display: Rotator
      - type: 
          display: Rotator
      - type: number
      - type: number
  HELIXMath.VInterpTo:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
  HELIXMath.VInterpConstantTo:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number