---
base: lua52
name: helix
globals:
  AimMode.None:
    property: read-only
  AimMode.ADS:
    property: read-only
  AimMode.ZoomedZoom:
    property: read-only
  AimMode.Zoomed:
    property: read-only
  AimMode.ZoomedFar:
    property: read-only
  AnimationSlotType.FullBody:
    property: read-only
  AnimationSlotType.UpperBody:
    property: read-only
  AssetType.Map:
    property: read-only
  AssetType.StaticMesh:
    property: read-only
  AssetType.SkeletalMesh:
    property: read-only
  AssetType.Sound:
    property: read-only
  AssetType.Animation:
    property: read-only
  AssetType.Particle:
    property: read-only
  AssetType.Material:
    property: read-only
  AssetType.Blueprint:
    property: read-only
  AttachmentRule.KeepRelative:
    property: read-only
  AttachmentRule.KeepWorld:
    property: read-only
  AttachmentRule.SnapToTarget:
    property: read-only
  AttenuationFunction.Linear:
    property: read-only
  AttenuationFunction.Logarithmic:
    property: read-only
  AttenuationFunction.Inverse:
    property: read-only
  AttenuationFunction.LogReverse:
    property: read-only
  AttenuationFunction.NaturalSound:
    property: read-only
  BlendMode.Opaque:
    property: read-only
  BlendMode.Masked:
    property: read-only
  BlendMode.Translucent:
    property: read-only
  BlendMode.Additive:
    property: read-only
  BlendMode.Modulate:
    property: read-only
  BlendMode.MaskedDistanceField:
    property: read-only
  BlendMode.MaskedDistanceFieldShadowed:
    property: read-only
  BlendMode.TranslucentDistanceField:
    property: read-only
  BlendMode.TranslucentDistanceFieldShadowed:
    property: read-only
  BlendMode.AlphaComposite:
    property: read-only
  BlendMode.AlphaHoldout:
    property: read-only
  BlendMode.AlphaBlend:
    property: read-only
  BlendMode.TranslucentAlphaOnly:
    property: read-only
  BlendMode.TranslucentAlphaOnlyWriteAlpha:
    property: read-only
  CameraMode.FPSTPS:
    property: read-only
  CameraMode.FPSOnly:
    property: read-only
  CameraMode.TPSOnly:
    property: read-only
  CCDMode.Auto:
    property: read-only
  CCDMode.Disabled:
    property: read-only
  CCDMode.Enabled:
    property: read-only
  CollisionChannel.WorldStatic:
    property: read-only
  CollisionChannel.WorldDynamic:
    property: read-only
  CollisionChannel.Pawn:
    property: read-only
  CollisionChannel.PhysicsBody:
    property: read-only
  CollisionChannel.Mesh:
    property: read-only
  CollisionChannel.Water:
    property: read-only
  CollisionChannel.Foliage:
    property: read-only
  CollisionChannel.Vehicle:
    property: read-only
  CollisionType.Normal:
    property: read-only
  CollisionType.StaticOnly:
    property: read-only
  CollisionType.NoCollision:
    property: read-only
  CollisionType.IgnoreOnlyPawn:
    property: read-only
  CollisionType.Auto:
    property: read-only
  CursorType.None:
    property: read-only
  CursorType.Default:
    property: read-only
  CursorType.TextEditBeam:
    property: read-only
  CursorType.ResizeLeftRight:
    property: read-only
  CursorType.ResizeUpDown:
    property: read-only
  CursorType.ResizeSouthEast:
    property: read-only
  CursorType.ResizeSouthWest:
    property: read-only
  CursorType.CardinalCross:
    property: read-only
  CursorType.Crosshairs:
    property: read-only
  CursorType.Hand:
    property: read-only
  CursorType.GrabHand:
    property: read-only
  CursorType.GrabHandClosed:
    property: read-only
  CursorType.SlashedCircle:
    property: read-only
  CursorType.EyeDropper:
    property: read-only
  ConstraintMotion.Free:
    property: read-only
  ConstraintMotion.Limited:
    property: read-only
  ConstraintMotion.Locked:
    property: read-only
  DamageType.Shot:
    property: read-only
  DamageType.Explosion:
    property: read-only
  DamageType.Punch:
    property: read-only
  DamageType.Fall:
    property: read-only
  DamageType.RunOverProp:
    property: read-only
  DamageType.RunOverVehicle:
    property: read-only
  DamageType.Melee:
    property: read-only
  DamageType.Unknown:
    property: read-only
  DatabaseEngine.SQLite:
    property: read-only
  DatabaseEngine.MySQL:
    property: read-only
  DatabaseEngine.PostgreSQL:
    property: read-only
  FallingMode.None:
    property: read-only
  FallingMode.Jumping:
    property: read-only
  FallingMode.Climbing:
    property: read-only
  FallingMode.Vaulting:
    property: read-only
  FallingMode.Falling:
    property: read-only
  FallingMode.HighFalling:
    property: read-only
  FallingMode.Parachuting:
    property: read-only
  FallingMode.SkyDiving:
    property: read-only
  FontType.Roboto:
    property: read-only
  FontType.GothicA1:
    property: read-only
  FontType.PoiretOne:
    property: read-only
  FontType.Oswald:
    property: read-only
  FontType.RobotoMono:
    property: read-only
  FontType.OpenSans:
    property: read-only
  GaitMode.None:
    property: read-only
  GaitMode.Walking:
    property: read-only
  GaitMode.Sprinting:
    property: read-only
  GrabMode.Disabled:
    property: read-only
  GrabMode.Auto:
    property: read-only
  GrabMode.Enabled:
    property: read-only
  HighlightMode.Always:
    property: read-only
  HighlightMode.OnlyHidden:
    property: read-only
  HighlightMode.OnlyVisible:
    property: read-only
  HandlingMode.SingleHandedWeapon:
    property: read-only
  HandlingMode.DoubleHandedWeapon:
    property: read-only
  HandlingMode.SingleHandedMelee:
    property: read-only
  HandlingMode.DoubleHandedMelee:
    property: read-only
  HandlingMode.Throwable:
    property: read-only
  HandlingMode.Torch:
    property: read-only
  HandlingMode.Barrel:
    property: read-only
  HandlingMode.Box:
    property: read-only
  ImageFormat.JPEG:
    property: read-only
  ImageFormat.PNG:
    property: read-only
  ImageFormat.BMP:
    property: read-only
  InputEvent.Pressed:
    property: read-only
  InputEvent.Released:
    property: read-only
  KeyModifier.None:
    property: read-only
  KeyModifier.LeftShiftDown:
    property: read-only
  KeyModifier.RightShiftDown:
    property: read-only
  KeyModifier.LeftControlDown:
    property: read-only
  KeyModifier.RightControlDown:
    property: read-only
  KeyModifier.LeftAltDown:
    property: read-only
  KeyModifier.RightAltDown:
    property: read-only
  KeyModifier.LeftCommandDown:
    property: read-only
  KeyModifier.RightCommandDown:
    property: read-only
  KeyModifier.CapsLocked:
    property: read-only
  LightProfile.None:
    property: read-only
  LightProfile.Arrow_Star:
    property: read-only
  LightProfile.Arrow_Up:
    property: read-only
  LightProfile.Beam_01:
    property: read-only
  LightProfile.Beam_02:
    property: read-only
  LightProfile.Beam_03:
    property: read-only
  LightProfile.Beam_04:
    property: read-only
  LightProfile.Beam_05:
    property: read-only
  LightProfile.Beam_06:
    property: read-only
  LightProfile.Beam_07:
    property: read-only
  LightProfile.Beam_08:
    property: read-only
  LightProfile.Beam_LED_01:
    property: read-only
  LightProfile.Beam_LED_02:
    property: read-only
  LightProfile.Beam_LED_03:
    property: read-only
  LightProfile.Beam_LED_04:
    property: read-only
  LightProfile.Beam_LED_05:
    property: read-only
  LightProfile.Beam_LED_06:
    property: read-only
  LightProfile.Beam_LED_07:
    property: read-only
  LightProfile.Bow:
    property: read-only
  LightProfile.Capped_01:
    property: read-only
  LightProfile.Capped_02:
    property: read-only
  LightProfile.Shattered_01:
    property: read-only
  LightProfile.Shattered_02:
    property: read-only
  LightProfile.Shattered_03:
    property: read-only
  LightProfile.Shattered_04:
    property: read-only
  LightProfile.Shattered_05:
    property: read-only
  LightProfile.SpotLight_01:
    property: read-only
  LightProfile.SpotLight_02:
    property: read-only
  LightProfile.SpotLight_03:
    property: read-only
  LightProfile.SpotLight_04:
    property: read-only
  LightProfile.Spreadout_01:
    property: read-only
  LightProfile.Spreadout_02:
    property: read-only
  LightProfile.Spreadout_03:
    property: read-only
  LightProfile.Spreadout_04:
    property: read-only
  LightProfile.Star_Bow:
    property: read-only
  LightProfile.Star_Burst_01:
    property: read-only
  LightProfile.Star_Burst_02:
    property: read-only
  LightProfile.Star_Burst_03:
    property: read-only
  LightProfile.Star_Burst_04:
    property: read-only
  LightProfile.Star_Burst_05:
    property: read-only
  LightProfile.Star_Burst_06:
    property: read-only
  LightProfile.Star_Burst_07:
    property: read-only
  LightProfile.Star_Burst_08:
    property: read-only
  LightProfile.Star_X_01:
    property: read-only
  LightProfile.Star_X_02:
    property: read-only
  LightProfile.Wall_Boomerang:
    property: read-only
  LightProfile.Wall_Inverted_V:
    property: read-only
  LightProfile.Wall_Star_T:
    property: read-only
  LightProfile.Wing_6:
    property: read-only
  LightProfile.Wing_V_01:
    property: read-only
  LightProfile.Wing_V_02:
    property: read-only
  LogType.Display:
    property: read-only
  LogType.Warning:
    property: read-only
  LogType.Error:
    property: read-only
  LogType.Debug:
    property: read-only
  LogType.Verbose:
    property: read-only
  LogType.Scripting:
    property: read-only
  LogType.ScriptingWarn:
    property: read-only
  LogType.ScriptingError:
    property: read-only
  LogType.Chat:
    property: read-only
  LogType.WebUI:
    property: read-only
  LogType.Success:
    property: read-only
  LogType.Fatal:
    property: read-only
  LightType.Point:
    property: read-only
  LightType.Spot:
    property: read-only
  LightType.React:
    property: read-only
  NativeWidget.Border:
    property: read-only
  NativeWidget.Button:
    property: read-only
  NativeWidget.CheckBox:
    property: read-only
  NativeWidget.Image:
    property: read-only
  NativeWidget.ProgressBar:
    property: read-only
  NativeWidget.RichTextBlock:
    property: read-only
  NativeWidget.Slider:
    property: read-only
  NativeWidget.Text:
    property: read-only
  NativeWidget.ComboBox:
    property: read-only
  NativeWidget.EditableText:
    property: read-only
  NativeWidget.EditableTextMultiLine:
    property: read-only
  NativeWidget.SpinBox:
    property: read-only
  NativeWidget.TextBox:
    property: read-only
  NativeWidget.TextBoxMultiLine:
    property: read-only
  NativeWidget.CanvasPanel:
    property: read-only
  NativeWidget.GridPanel:
    property: read-only
  NativeWidget.HorizontalBox:
    property: read-only
  NativeWidget.Overlay:
    property: read-only
  NativeWidget.ScaleBox:
    property: read-only
  NativeWidget.ScrollBox:
    property: read-only
  NativeWidget.SizeBox:
    property: read-only
  NativeWidget.UniformGridPanel:
    property: read-only
  NativeWidget.VerticalBox:
    property: read-only
  NativeWidget.WrapBox:
    property: read-only
  NativeWidget.BackgroundBlur:
    property: read-only
  PackageType.Script:
    property: read-only
  PackageType.GameMode:
    property: read-only
  PackageType.LoadingScreen:
    property: read-only
  PackageType.Map:
    property: read-only
  SkyMode.VolumetricClouds:
    property: read-only
  SkyMode.StaticClouds:
    property: read-only
  SkyMode.DynamicClouds2D:
    property: read-only
  SkyMode.NoClouds:
    property: read-only
  SkyMode.VolumetricAurora:
    property: read-only
  SkyMode.Space:
    property: read-only
  SoundType.SFX:
    property: read-only
  SoundType.Music:
    property: read-only
  SoundType.UI:
    property: read-only
  SoundLoopMode.Default:
    property: read-only
  SoundLoopMode.Forever:
    property: read-only
  SoundLoopMode.Never:
    property: read-only
  StanceMode.None:
    property: read-only
  StanceMode.Standing:
    property: read-only
  StanceMode.Crouching:
    property: read-only
  StanceMode.Proning:
    property: read-only
  SteeringType.SingleAngle:
    property: read-only
  SteeringType.AngleRatio:
    property: read-only
  SteeringType.Ackermann:
    property: read-only
  SurfaceType.Default:
    property: read-only
  SurfaceType.Carpet:
    property: read-only
  SurfaceType.Concrete:
    property: read-only
  SurfaceType.Grass:
    property: read-only
  SurfaceType.Gravel:
    property: read-only
  SurfaceType.Ground:
    property: read-only
  SurfaceType.MetalLight:
    property: read-only
  SurfaceType.Plastic:
    property: read-only
  SurfaceType.Sand:
    property: read-only
  SurfaceType.Snow:
    property: read-only
  SurfaceType.Water:
    property: read-only
  SurfaceType.WoodLight:
    property: read-only
  SurfaceType.Flesh:
    property: read-only
  SurfaceType.MetalHeavy:
    property: read-only
  SurfaceType.WoodHeavy:
    property: read-only
  SurfaceType.Ice:
    property: read-only
  SurfaceType.Mud:
    property: read-only
  SurfaceType.Rock:
    property: read-only
  SurfaceType.Thump:
    property: read-only
  SurfaceType.Glass:
    property: read-only
  SurfaceType.Rubber:
    property: read-only
  SurfaceType.Air:
    property: read-only
  SwimmingMode.None:
    property: read-only
  SwimmingMode.Surface:
    property: read-only
  SwimmingMode.Underwater:
    property: read-only
  TextRenderAlignCamera.Unaligned:
    property: read-only
  TextRenderAlignCamera.AlignCameraRotation:
    property: read-only
  TextRenderAlignCamera.FaceCamera:
    property: read-only
  TextRenderBevelType.Linear:
    property: read-only
  TextRenderBevelType.HalfCircle:
    property: read-only
  TextRenderBevelType.Convex:
    property: read-only
  TextRenderBevelType.Concave:
    property: read-only
  TextRenderBevelType.OneStep:
    property: read-only
  TextRenderBevelType.TwoSteps:
    property: read-only
  TextRenderBevelType.Engraved:
    property: read-only
  TextRenderHorizontalAlignment.Left:
    property: read-only
  TextRenderHorizontalAlignment.Center:
    property: read-only
  TextRenderHorizontalAlignment.Right:
    property: read-only
  TextRenderVerticalAlignment.Top:
    property: read-only
  TextRenderVerticalAlignment.Center:
    property: read-only
  TextRenderVerticalAlignment.Bottom:
    property: read-only
  TextRenderVerticalAlignment.QuadTop:
    property: read-only
  TriggerType.Sphere:
    property: read-only
  TriggerType.Box:
    property: read-only
  TraceMode.DrawDebug:
    property: read-only
  TraceMode.TraceComplex:
    property: read-only
  TraceMode.ReturnPhysicalMaterial:
    property: read-only
  TraceMode.ReturnEntity:
    property: read-only
  TraceMode.ReturnNames:
    property: read-only
  TraceMode.ReturnUV:
    property: read-only
  ViewMode.FPS:
    property: read-only
  ViewMode.TPS1:
    property: read-only
  ViewMode.TPS2:
    property: read-only
  ViewMode.TPS3:
    property: read-only
  ViewMode.TopDown:
    property: read-only
  VOIPSetting.Local:
    property: read-only
  VOIPSetting.Global:
    property: read-only
  VOIPSetting.Muted:
    property: read-only
  WeatherType.ClearSkies:
    property: read-only
  WeatherType.Cloudy:
    property: read-only
  WeatherType.Foggy:
    property: read-only
  WeatherType.Overcast:
    property: read-only
  WeatherType.PartlyCloudy:
    property: read-only
  WeatherType.Rain:
    property: read-only
  WeatherType.RainLight:
    property: read-only
  WeatherType.RainThunderstorm:
    property: read-only
  WeatherType.SandDustCalm:
    property: read-only
  WeatherType.SandDustStorm:
    property: read-only
  WeatherType.Snow:
    property: read-only
  WeatherType.SnowBlizzard:
    property: read-only
  WeatherType.SnowLight:
    property: read-only
  WebUIModifier.None:
    property: read-only
  WebUIModifier.CapsLockOn:
    property: read-only
  WebUIModifier.ShiftDown:
    property: read-only
  WebUIModifier.ControlDown:
    property: read-only
  WebUIModifier.AltDown:
    property: read-only
  WebUIModifier.LeftMouseButton:
    property: read-only
  WebUIModifier.MiddleMouseButton:
    property: read-only
  WebUIModifier.RightMouseButton:
    property: read-only
  WebUIModifier.CommandDown:
    property: read-only
  WebUIModifier.NumLockOn:
    property: read-only
  WebUIModifier.IsKeyPad:
    property: read-only
  WebUIModifier.IsLeft:
    property: read-only
  WebUIModifier.IsRight:
    property: read-only
  WebUIModifier.AltgrDown:
    property: read-only
  WebUIModifier.IsRepeat:
    property: read-only
  WebUIKeyType.Down:
    property: read-only
  WebUIKeyType.Up:
    property: read-only
  WebUIKeyType.Char:
    property: read-only
  WebUIMouseType.Left:
    property: read-only
  WebUIMouseType.Right:
    property: read-only
  WebUIMouseType.Middle:
    property: read-only
  WidgetVisibility.Hidden:
    property: read-only
  WidgetVisibility.Visible:
    property: read-only
  WidgetVisibility.VisibleNotHitTestable:
    property: read-only

  Billboard:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: string
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: boolean
  Decal:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: number
      - required: false
        type: number
  StaticMesh:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
  Blueprint:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: string
  Database:
    must_use: true
    args:
      - type: 
          display: DatabaseEngine
      - type: string
      - required: false
        type: 
          display: integer
  Light:
    must_use: true
    args:
      - type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: LightType
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: boolean
  TextRender:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: FontType
      - required: false
        type: 
          display: TextRenderAlignCamera
  HELIXAircraft:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Cable:
    must_use: true
    args:
      - type: 
          display: Vector
      - required: false
        type: boolean
  Particle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: boolean
      - required: false
        type: boolean
  Chat.AddMessage:
    args:
      - type: string
  Chat.SendMessage:
    args:
      - type: 
          display: Player
      - type: string
  Chat.SetConfiguration:
    args:
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: boolean
      - required: false
        type: boolean
  Chat.SetVisibility:
    args:
      - type: boolean
  Chat.Clear:
    args:[]
  Chat.BroadcastMessage:
    args:
      - type: string
  Chat.Subscribe:
    args:
      - type: string
      - type: function
  Chat.Unsubscribe:
    args:
      - type: string
      - type: function
  Sound:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: string
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: SoundType
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: 
          display: AttenuationFunction
      - required: false
        type: boolean
      - required: false
        type: 
          display: SoundLoopMode
  Assets.GetAssetPacks:
    args:[]
  Assets.GetAnimations:
    args:
      - type: string
  Assets.GetBlueprints:
    args:
      - type: string
  Assets.GetMaps:
    args:
      - type: string
  Assets.GetMaterials:
    args:
      - type: string
  Assets.GetParticles:
    args:
      - type: string
  Assets.GetSounds:
    args:
      - type: string
  Assets.GetSkeletalMeshes:
    args:
      - type: string
  Assets.GetStaticMeshes:
    args:
      - type: string
  Assets.GetOthers:
    args:
      - type: string
  Assets.Precache:
    args:
      - type: string
      - type: 
          display: AssetType
  HELIXCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: any
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  HELIXCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Player
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Melee:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: HandlingMode
      - required: false
        type: string
      - required: false
        type: boolean
  Prop:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: GrabMode
      - required: false
        type: 
          display: CCDMode
  Widget:
    must_use: true
    args:
      - type: string
  Widget:
    must_use: true
    args:
      - type: 
          display: NativeWidget
  File:
    must_use: true
    args:
      - type: string
      - required: false
        type: boolean
  File.Time:
    args:
      - type: string
  File.CreateDirectory:
    args:
      - type: string
  File.Remove:
    args:
      - type: string
  File.Exists:
    args:
      - type: string
  File.IsDirectory:
    args:
      - type: string
  File.IsRegularFile:
    args:
      - type: string
  SceneCapture:
    must_use: true
    args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
  Grenade:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Debug.DrawBox:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawCoordinateSystem:
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: number
      - type: number
      - type: number
  Debug.DrawCrosshairs:
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: number
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawCylinder:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: 
          display: integer
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawDirectionalArrow:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: number
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawLine:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawPoint:
    args:
      - type: 
          display: Vector
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawSphere:
    args:
      - type: 
          display: Vector
      - type: number
      - type: 
          display: integer
      - required: false
        type: 
          display: Color
      - type: number
      - type: number
  Debug.DrawString:
    args:
      - type: 
          display: Vector
      - type: string
      - required: false
        type: 
          display: Color
      - type: number
      - type: boolean
      - type: number
  Entity.GetAll:
    args:[]
  Entity.GetByIndex:
    args:
      - type: 
          display: integer
  Entity.GetCount:
    args:[]
  Entity.GetPairs:
    args:[]
  Entity.Inherit:
    args:
      - type: string
      - required: false
        type: table
  Entity.GetInheritedClasses:
    args:
      - required: false
        type: boolean
  Entity.GetParentClass:
    args:[]
  Entity.IsChildOf:
    args:
      - type: table
  Entity.SubscribeRemote:
    args:
      - type: string
      - type: function
  Canvas:
    must_use: true
    args:
      - required: false
        type: boolean
      - required: false
        type: 
          display: Color
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: Vector2D
  Client.CopyToClipboard:
    args:
      - type: string
  Client.SetNearClipPlane:
    args:
      - type: number
  Client.GetNearClipPlane:
    args:[]
  Client.GetConnectedServerIP:
    args:[]
  Client.SetDebugEnabled:
    args:
      - type: boolean
  Client.SetHighlightColor:
    args:
      - type: 
          display: Color
      - type: 
          display: integer
      - required: false
        type: 
          display: HighlightMode
  Client.SetOutlineColor:
    args:
      - type: 
          display: Color
      - required: false
        type: 
          display: integer
      - required: false
        type: number
  Client.SetValue:
    args:
      - type: string
      - type: 
          display: any
  Client.GetLocalPlayer:
    args:[]
  Client.GetFrameTime:
    args:[]
  Client.GetTime:
    args:[]
  Client.GetMap:
    args:[]
  Client.GetPackages:
    args:[]
  Client.GetValue:
    args:
      - type: string
      - type: 
          display: any
  Client.Subscribe:
    args:
      - type: string
      - type: function
  Client.Unsubscribe:
    args:
      - type: string
      - type: function
  Timer.SetTimeout:
    args:
      - type: function
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: any
  Timer.SetInterval:
    args:
      - type: function
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: any
  Timer.ClearTimeout:
    args:
      - type: 
          display: integer
  Timer.ClearInterval:
    args:
      - type: 
          display: integer
  Timer.Bind:
    args:
      - type: 
          display: integer
      - type: 
          display: Actor
  Timer.IsValid:
    args:
      - type: 
          display: integer
  Timer.GetElapsedTime:
    args:
      - type: 
          display: integer
  Timer.GetRemainingTime:
    args:
      - type: 
          display: integer
  Timer.Pause:
    args:
      - type: 
          display: integer
  Timer.Resume:
    args:
      - type: 
          display: integer
  Timer.ResetElapsedTime:
    args:
      - type: 
          display: integer
  CharacterSimple:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: any
      - required: false
        type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  HCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Player
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: string
      - required: false
        type: string
  HCharacter:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: string
      - required: false
        type: string
  Weapon:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Matrix:
    must_use: true
    args:
      - type: 
          display: Rotator
      - type: 
          display: Vector
  HELIXVehicle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  Vehicle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: string
  Console.Log:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Console.Warn:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Console.Error:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Console.RegisterCommand:
    args:
      - type: string
      - type: function
      - type: string
      - type: string[]
  Console.Subscribe:
    args:
      - type: string
      - type: function
  Console.Unsubscribe:
    args:
      - type: string
      - type: function
  Trigger:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Vector
      - required: false
        type: 
          display: TriggerType
      - required: false
        type: boolean
      - required: false
        type: 
          display: Color
      - required: false
        type: string[]
  Character:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: string
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: string
      - required: false
        type: string
  HSimpleVehicle:
    must_use: true
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Blueprint Reference
      - required: false
        type: 
          display: CollisionType
      - required: false
        type: boolean
  WebUI:
    must_use: true
    args:
      - type: string
      - type: string
      - required: false
        type: 
          display: WidgetVisibility
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
  Payment.ChargePlayer:
    args:
      - type: 
          display: Player
      - type: 
          display: integer
      - type: string
      - type: string
      - type: string
      - type: function
  Payment.SellItem:
    args:
      - type: 
          display: Player
      - type: string
      - type: 
          display: integer
      - type: string
      - type: string
      - type: function
  Payment.Subscribe:
    args:
      - type: string
      - type: function
  Payment.Unsubscribe:
    args:
      - type: string
      - type: function
  Color:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.RandomPalette:
    args:
      - required: false
        type: boolean
  Color.Random:
    args:[]
  Color.FromRGBA:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromCYMK:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromHSL:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromHSV:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Color.FromHEX:
    args:
      - type: string
  Discord.Initialize:
    args:
      - type: 
          display: integer
  Discord.SetActivity:
    args:
      - type: string
      - type: string
      - type: string
      - type: string
      - required: false
        type: string
  Vector:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Quat:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Matchmaking.JoinMatchmaking:
    args:
      - type: string
      - type: 
          display: Player
      - type: 
          display: integer
      - type: function
  Matchmaking.CheckMatchmakingStatus:
    args:
      - type: string
      - type: function
  Matchmaking.LeaveMatchmaking:
    args:
      - type: string
      - type: 
          display: Player
      - type: function
  Matchmaking.LeaveAllMatchmaking:
    args:
      - type: 
          display: Player
      - type: function
  Sky.Spawn:
    args:
      - required: false
        type: boolean
  Sky.DestroyAllSky:
    args:[]
  Sky.Reconstruct:
    args:[]
  Sky.SetMoonTexture:
    args:
      - type: string
  Sky.SetMoonTextureRotation:
    args:
      - type: number
  Sky.SetMoonVerticalOffset:
    args:
      - type: number
  Sky.SetMoonScale:
    args:
      - type: number
  Sky.SetMoonPhase:
    args:
      - type: number
  Sky.SetMoonGlowIntensity:
    args:
      - type: number
  Sky.SetMoonLightIntensity:
    args:
      - type: number
  Sky.SetSunAngle:
    args:
      - type: number
  Sky.SetSunRadius:
    args:
      - type: number
  Sky.SetSunLightIntensity:
    args:
      - type: number
  Sky.SetSkyMode:
    args:
      - type: 
          display: SkyMode
  Sky.SetVolumetricCloudColor:
    args:
      - type: 
          display: Color
  Sky.SetCloudCoverage:
    args:
      - type: number
  Sky.SetFog:
    args:
      - type: number
  Sky.SetContrast:
    args:
      - type: number
  Sky.SetOverallIntensity:
    args:
      - type: number
  Sky.SetNightBrightness:
    args:
      - type: number
  Sky.SetAnimateTimeOfDay:
    args:
      - type: boolean
      - required: false
        type: number
      - required: false
        type: number
  Sky.SetTimeOfDay:
    args:
      - type: 
          display: integer
      - type: 
          display: integer
  Sky.GetTimeOfDay:
    args:[]
  Sky.IsSpawned:
    args:
      - type: boolean
  Sky.GetWeather:
    args:[]
  Sky.ChangeWeather:
    args:
      - type: 
          display: WeatherType
      - type: number
  HELIXUtils.IsEntityValid:
    args:
      - type: 
          display: any
  HELIXUtils.Benchmark:
    args:
      - type: string
      - type: number
      - type: function
      - type: 
          display: any
  Server.ChangeMap:
    args:
      - type: string
  Server.LoadPackage:
    args:
      - type: string
  Server.ReloadPackage:
    args:
      - type: string
  Server.UnloadPackage:
    args:
      - type: string
  Server.SetDescription:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetLogo:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetMaxPlayers:
    args:
      - type: 
          display: integer
      - required: false
        type: boolean
  Server.SetName:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetPassword:
    args:
      - type: string
      - required: false
        type: boolean
  Server.SetValue:
    args:
      - type: string
      - type: 
          display: any
      - required: false
        type: boolean
  Server.GetValue:
    args:
      - type: string
      - type: 
          display: any
  Server.Unban:
    args:
      - type: string
  Server.Stop:
    args:[]
  Server.GetMap:
    args:[]
  Server.GetMapAsset:
    args:[]
  Server.GetMapConfig:
    args:[]
  Server.GetMapSpawnPoints:
    args:[]
  Server.GetPackages:
    args:
      - required: false
        type: boolean
      - required: false
        type: 
          display: PackageType
  Server.GetVersion:
    args:[]
  Server.GetIP:
    args:[]
  Server.GetPort:
    args:[]
  Server.GetQueryPort:
    args:[]
  Server.GetMaxPlayers:
    args:[]
  Server.GetDescription:
    args:[]
  Server.GetCustomSettings:
    args:[]
  Server.GetTickRate:
    args:[]
  Server.GetTime:
    args:[]
  Server.IsAnnounced:
    args:[]
  Server.Subscribe:
    args:
      - type: string
      - type: function
  Server.Unsubscribe:
    args:
      - type: string
      - type: function
  Trace.LineSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.LineMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.SphereSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.SphereMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.BoxSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.BoxMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.CapsuleSingle:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Trace.CapsuleMulti:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
      - required: false
        type: 
          display: CollisionChannel
      - required: false
        type: 
          display: TraceMode
      - required: false
        type: 
          display: Actor[]
  Vector2D:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
  HTTP.RequestAsync:
    args:
      - type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: table
      - required: false
        type: function
  HTTP.Request:
    args:
      - type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: table
  HTTP.SetConnectionTimeout:
    args:
      - type: 
          display: integer
  HTTP.SetReadWriteTimeout:
    args:
      - type: 
          display: integer
  Events.Call:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Events.CallRemote:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Events.CallRemote:
    args:
      - type: string
      - type: 
          display: Player
      - required: false
        type: 
          display: any
  Events.BroadcastRemote:
    args:
      - type: string
      - required: false
        type: 
          display: any
  Events.BroadcastRemoteDimension:
    args:
      - type: 
          display: integer
      - type: string
      - required: false
        type: 
          display: any
  Events.Subscribe:
    args:
      - type: string
      - type: function
  Events.SubscribeRemote:
    args:
      - type: string
      - type: function
  Events.Unsubscribe:
    args:
      - type: string
      - required: false
        type: function
  Viewport.ProjectWorldToScreen:
    args:
      - type: 
          display: Vector
  Viewport.DeprojectScreenToWorld:
    args:
      - type: 
          display: Vector2D
  Viewport.SetHardwareCursor:
    args:
      - type: 
          display: CursorType
      - type: string
      - required: false
        type: 
          display: Vector2D
  Viewport.GetViewportSize:
    args:[]
  Viewport.SetMousePosition:
    args:
      - type: 
          display: Vector2D
  Viewport.GetMousePosition:
    args:[]
  Viewport.SetCrosshairEnabled:
    args:
      - type: boolean
  Viewport.SetBloodScreenEnabled:
    args:
      - type: boolean
  Viewport.SetBloodScreenIntensity:
    args:
      - type: number
  Viewport.Subscribe:
    args:
      - type: string
      - type: function
  Viewport.Unsubscribe:
    args:
      - type: string
      - type: function
  Input.Bind:
    args:
      - type: string
      - type: 
          display: InputEvent
      - type: function
  Input.Unbind:
    args:
      - type: string
      - type: 
          display: InputEvent
  Input.Register:
    args:
      - type: string
      - type: string
  Input.Unregister:
    args:
      - type: string
      - type: string
  Input.GetKeyIcon:
    args:
      - type: string
      - required: false
        type: boolean
  Input.GetKeyCode:
    args:
      - type: string
  Input.GetModifierKeys:
    args:[]
  Input.GetMappedKeys:
    args:
      - type: string
  Input.ResetBindings:
    args:[]
  Input.GetScriptingKeyBindings:
    args:[]
  Input.GetGameKeyBindings:
    args:[]
  Input.SetInputEnabled:
    args:
      - type: boolean
  Input.SetMouseEnabled:
    args:
      - type: boolean
  Input.SetMouseCursor:
    args:
      - type: 
          display: CursorType
  Input.InputKey:
    args:
      - type: string
      - type: 
          display: InputEvent
      - required: false
        type: number
  Input.IsKeyDown:
    args:
      - type: string
  Input.IsMouseEnabled:
    args:[]
  Input.IsInputEnabled:
    args:[]
  Input.Subscribe:
    args:
      - type: string
      - type: function
  Input.Unsubscribe:
    args:
      - type: string
      - type: function
  PersistentDatabase.Create:
    args:
      - required: false
        type: function
  PersistentDatabase.Insert:
    args:
      - type: string
      - type: string
      - required: false
        type: function
  PersistentDatabase.Update:
    args:
      - type: string
      - type: string
      - required: false
        type: function
  PersistentDatabase.Delete:
    args:
      - type: string
      - required: false
        type: function
  PersistentDatabase.GetByKey:
    args:
      - type: string
      - required: false
        type: function
  PersistentDatabase.GetAll:
    args:
      - required: false
        type: function
  PersistentDatabase.GetSummary:
    args:
      - required: false
        type: function
  Package.Export:
    args:
      - type: string
      - type: 
          display: any
  Package.Require:
    args:
      - type: string
  Package.SetPersistentData:
    args:
      - type: string
      - type: 
          display: any
  Package.GetDirectories:
    args:
      - required: false
        type: string
  Package.GetFiles:
    args:
      - required: false
        type: any
      - required: false
        type: string
  Package.GetName:
    args:[]
  Package.GetTitle:
    args:[]
  Package.GetVersion:
    args:[]
  Package.GetCompatibilityVersion:
    args:[]
  Package.GetPersistentData:
    args:
      - required: false
        type: string
  Package.Subscribe:
    args:
      - type: string
      - type: function
  Package.Unsubscribe:
    args:
      - type: string
      - type: function
  JSON.stringify:
    args:
      - type: table
  JSON.parse:
    args:
      - type: string
  Level.LoadStreamLevel:
    args:
      - type: string
      - required: false
        type: boolean
      - required: false
        type: boolean
  Level.UnloadStreamLevel:
    args:
      - type: string
      - required: false
        type: boolean
  Level.SetStreamLevelVisibility:
    args:
      - type: string
      - type: boolean
  Level.GetStreamLevels:
    args:[]
  Level.CallLevelBlueprintEvent:
    args:
      - type: string
  Level.Subscribe:
    args:
      - type: string
      - type: function
  Level.Unsubscribe:
    args:
      - type: string
      - type: function
  Navigation.GetRandomReachablePointInRadius:
    args:
      - type: 
          display: Vector
      - type: number
  Navigation.GetRandomPointInNavigableRadius:
    args:
      - type: 
          display: Vector
      - type: number
  Navigation.FindPathToLocation:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
  PostProcess.SetBloom:
    args:
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetChromaticAberration:
    args:
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetImageEffects:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetExposure:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetFilm:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  PostProcess.SetGlobalSaturation:
    args:
      - type: 
          display: Color
  PostProcess.SetLookupTable:
    args:
      - type: string
  PostProcess.SetMaterial:
    args:
      - type: string
  PostProcess.RemoveMaterial:
    args:[]
  PostProcess.SetSunAngle:
    args:
      - type: number
  HELIXTable.Dump:
    args:
      - type: table
  HELIXTable.ShallowCopy:
    args:
      - type: table
  HELIXMath.Round:
    args:
      - type: number
  HELIXMath.Clamp:
    args:
      - type: number
      - type: number
      - type: number
  HELIXMath.ClampAxis:
    args:
      - type: number
  HELIXMath.NormalizeAxis:
    args:
      - type: number
  HELIXMath.RelativeTo:
    args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: Actor
  HELIXMath.FInterpTo:
    args:
      - type: number
      - type: number
      - type: number
      - type: number
  HELIXMath.RInterpTo:
    args:
      - type: 
          display: Rotator
      - type: 
          display: Rotator
      - type: number
      - type: number
  HELIXMath.RInterpConstantTo:
    args:
      - type: 
          display: Rotator
      - type: 
          display: Rotator
      - type: number
      - type: number
  HELIXMath.VInterpTo:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
  HELIXMath.VInterpConstantTo:
    args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: number
      - type: number
  Rotator:
    must_use: true
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  Rotator.Random:
    args:
      - required: false
        type: boolean
structs:
    Damageable:
    Damageable:ApplyDamage:
      args:
      - type: 
          display: integer
      - required: false
        type: string
      - required: false
        type: 
          display: DamageType
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Player
      - required: false
        type: 
          display: any
    Damageable:GetHealth:
      args:[]
    Damageable:GetMaxHealth:
      args:[]
    Damageable:Respawn:
      args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
    Damageable:SetHealth:
      args:
      - type: 
          display: integer
    Damageable:SetMaxHealth:
      args:
      - type: 
          display: integer
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Paintable:
    Paintable:SetMaterial:
      args:
      - type: string
      - required: false
        type: 
          display: integer
    Paintable:SetMaterialFromCanvas:
      args:
      - type: 
          display: Canvas
      - required: false
        type: 
          display: integer
    Paintable:SetMaterialFromSceneCapture:
      args:
      - type: 
          display: SceneCapture
      - required: false
        type: 
          display: integer
    Paintable:SetMaterialFromWebUI:
      args:
      - type: 
          display: WebUI
      - required: false
        type: 
          display: integer
    Paintable:ResetMaterial:
      args:
      - required: false
        type: 
          display: integer
    Paintable:SetMaterialColorParameter:
      args:
      - type: string
      - type: 
          display: Color
    Paintable:SetMaterialScalarParameter:
      args:
      - type: string
      - type: number
    Paintable:SetMaterialTextureParameter:
      args:
      - type: string
      - type: string
    Paintable:SetMaterialVectorParameter:
      args:
      - type: string
      - type: 
          display: Vector
    Paintable:SetPhysicalMaterial:
      args:
      - type: string
    Billboard:
    Decal:
    StaticMesh:
    StaticMesh:SetMesh:
      args:[]
    StaticMesh:GetMesh:
      args:[]
    StaticMesh:IsFromLevel:
      args:[]
    Blueprint:
    Blueprint:CallBlueprintEvent:
      args:
      - type: string
      - required: false
        type: 
          display: any
    Blueprint:BindBlueprintEventDispatcher:
      args:
      - type: string
      - type: function
    Blueprint:UnbindBlueprintEventDispatcher:
      args:
      - type: string
      - type: function
    Blueprint:SetBlueprintPropertyValue:
      args:
      - type: string
      - type: 
          display: any
    Blueprint:GetBlueprintPropertyValue:
      args:
      - type: string
    Database:
    Database:Close:
      args:[]
    Database:ExecuteAsync:
      args:
      - type: string
      - required: false
        type: function
      - required: false
        type: 
          display: any
    Database:Execute:
      args:
      - type: string
      - required: false
        type: 
          display: any
    Database:SelectAsync:
      args:
      - type: string
      - required: false
        type: function
      - required: false
        type: 
          display: any
    Database:Select:
      args:
      - type: string
      - required: false
        type: 
          display: any
    Light:
    Light:SetColor:
      args:
      - type: 
          display: Color
    Light:SetTextureLightProfile:
      args:
      - type: 
          display: LightProfile
    Light:SetCastShadows:
      args:
      - type: boolean
    Light:SetIntensity:
      args:
      - type: number
    Light:SetAttenuationRadius:
      args:
      - type: number
    Light:GetCastShadows:
      args:[]
    Light:GetIntensity:
      args:[]
    Light:GetAttenuationRadius:
      args:[]
    Light:GetColor:
      args:[]
    TextRender:
    TextRender:SetColor:
      args:
      - type: 
          display: Color
    TextRender:SetFont:
      args:
      - type: 
          display: FontType
    TextRender:SetFreeze:
      args:
      - type: boolean
    TextRender:SetGlyphSettings:
      args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: 
          display: TextRenderBevelType
      - required: false
        type: 
          display: integer
      - required: false
        type: boolean
    TextRender:SetMaxSize:
      args:
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: boolean
    TextRender:SetText:
      args:
      - type: string
    TextRender:SetTextSettings:
      args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: 
          display: TextRenderHorizontalAlignment
      - required: false
        type: 
          display: TextRenderVerticalAlignment
    HELIXAircraft:
    Pickable:
    Pickable:AddSkeletalMeshAttached:
      args:
      - type: string
      - type: string
    Pickable:AddStaticMeshAttached:
      args:
      - type: string
      - type: string
      - required: false
        type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
    Pickable:PullUse:
      args:
      - required: false
        type: number
    Pickable:ReleaseUse:
      args:[]
    Pickable:RemoveSkeletalMeshAttached:
      args:
      - type: string
    Pickable:RemoveStaticMeshAttached:
      args:
      - type: string
    Pickable:SetAttachmentSettings:
      args:
      - type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
      - required: false
        type: string
    Pickable:SetCrosshairMaterial:
      args:
      - type: string
    Pickable:SetPickable:
      args:
      - type: boolean
    Pickable:GetMesh:
      args:[]
    Pickable:GetHandler:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Cable:
    Cable:AttachStartTo:
      args:
      - type: 
          display: Actor
      - required: false
        type: 
          display: Vector
      - required: false
        type: string
    Cable:AttachEndTo:
      args:
      - type: 
          display: Actor
      - required: false
        type: 
          display: Vector
      - required: false
        type: string
    Cable:DetachEnd:
      args:[]
    Cable:DetachStart:
      args:[]
    Cable:SetCableSettings:
      args:
      - type: number
      - type: 
          display: integer
      - type: 
          display: integer
    Cable:SetForces:
      args:
      - type: 
          display: Vector
      - required: false
        type: number
    Cable:SetAngularLimits:
      args:
      - type: 
          display: ConstraintMotion
      - type: 
          display: ConstraintMotion
      - type: 
          display: ConstraintMotion
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
    Cable:SetLinearLimits:
      args:
      - type: 
          display: ConstraintMotion
      - type: 
          display: ConstraintMotion
      - type: 
          display: ConstraintMotion
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: number
      - required: false
        type: number
    Cable:SetRenderingSettings:
      args:
      - type: number
      - type: 
          display: integer
      - type: 
          display: integer
    Cable:GetAttachedStartTo:
      args:[]
    Cable:GetAttachedEndTo:
      args:[]
    Particle:
    Particle:Activate:
      args:
      - type: boolean
    Particle:Deactivate:
      args:[]
    Particle:SetParameterFloat:
      args:
      - type: string
      - type: number
    Particle:SetParameterInt:
      args:
      - type: string
      - type: 
          display: integer
    Particle:SetParameterBool:
      args:
      - type: string
      - type: boolean
    Particle:SetParameterVector:
      args:
      - type: string
      - type: 
          display: Vector
    Particle:SetParameterColor:
      args:
      - type: string
      - type: 
          display: Color
    Particle:SetParameterMaterial:
      args:
      - type: string
      - type: string
    Particle:SetParameterMaterialFromTexture:
      args:
      - type: string
      - type: string
    Particle:SetParameterMaterialFromCanvas:
      args:
      - type: string
      - type: 
          display: Canvas
    Particle:SetParameterMaterialFromWebUI:
      args:
      - type: string
      - type: 
          display: WebUI
    Chat:
    Sound:
    Sound:FadeIn:
      args:
      - type: number
      - required: false
        type: number
      - required: false
        type: number
    Sound:FadeOut:
      args:
      - type: number
      - required: false
        type: number
      - required: false
        type: boolean
    Sound:Play:
      args:
      - required: false
        type: number
    Sound:SetFalloffDistance:
      args:
      - type: number
    Sound:SetInnerRadius:
      args:
      - type: number
    Sound:SetLowPassFilter:
      args:
      - type: number
    Sound:SetPaused:
      args:
      - required: false
        type: boolean
    Sound:SetPitch:
      args:
      - type: number
    Sound:SetVolume:
      args:
      - type: number
    Sound:Stop:
      args:[]
    Sound:StopDelayed:
      args:
      - type: number
    Sound:Is2D:
      args:[]
    Sound:IsPlaying:
      args:[]
    Sound:GetDuration:
      args:[]
    Sound:GetPitch:
      args:[]
    Sound:GetVolume:
      args:[]
    Sound:GetLowPassFilter:
      args:[]
    Sound:GetInnerRadius:
      args:[]
    Sound:GetFalloffDistance:
      args:[]
    Sound:GetSoundType:
      args:[]
    Assets:
    HELIXCharacter:
    HELIXCharacter:PlayAnimation:
      args:
      - type: string
      - required: false
        type: boolean
      - required: false
        type: string
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
    HELIXCharacter:StopAnimation:
      args:
      - type: string
    HELIXCharacter:SetMesh:
      args:
      - type: any
    HELIXCharacter:GetMesh:
      args:[]
    HELIXCharacter:SetJumpZVelocity:
      args:
      - type: 
          display: integer
    HELIXCharacter:SetCapsuleSize:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
    HELIXCharacter:SetCanJump:
      args:
      - type: boolean
    HELIXCharacter:SetCanCrouch:
      args:
      - type: boolean
    HELIXCharacter:SetBrakingSettings:
      args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
    HELIXCharacter:SetGravityScale:
      args:
      - type: number
    HELIXCharacter:SetAccelerationSettings:
      args:
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
    HELIXCharacter:SetCanGrabProps:
      args:
      - type: boolean
    HELIXCharacter:SetCanPickupPickables:
      args:
      - type: boolean
    HELIXCharacter:SetRadialDamageToRagdoll:
      args:
      - type: 
          display: integer
    HELIXCharacter:GetWeaponAimMode:
      args:[]
    HELIXCharacter:StopMovement:
      args:[]
    HELIXCharacter:MoveTo:
      args:
      - type: 
          display: Vector
      - required: false
        type: number
    HELIXCharacter:Follow:
      args:
      - type: 
          display: Actor
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: number
    HELIXCharacter:Jump:
      args:[]
    HELIXCharacter:EnterVehicle:
      args:[]
    HELIXCharacter:LeaveVehicle:
      args:[]
    HELIXCharacter:GrabProp:
      args:
      - type: 
          display: Prop
    HELIXCharacter:UnGrabProp:
      args:[]
    HELIXCharacter:PickUp:
      args:[]
    HELIXCharacter:Drop:
      args:
    HELIXCharacter:GetMovingTo:
      args:[]
    HELIXCharacter:GetControlRotation:
      args:[]
    HELIXCharacter:GetTeam:
      args:[]
    HELIXCharacter:GetPlayer:
      args:[]
    HELIXCharacter:GetVehicle:
      args:[]
    HELIXCharacter:GetGrabbedProp:
      args:[]
    HELIXCharacter:GetPicked:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Player:
    Player:Ban:
      args:
      - type: string
    Player:Connect:
      args:
      - type: string
      - required: false
        type: string
    Player:Kick:
      args:
      - type: string
    Player:Possess:
      args:
      - type: 
          display: Character
      - required: false
        type: number
      - required: false
        type: number
    Player:StartCameraFade:
      args:
      - type: number
      - type: number
      - type: number
      - type: 
          display: Color
      - type: boolean
      - type: boolean
    Player:SetManualCameraFade:
      args:
      - type: number
      - type: 
          display: Color
      - type: boolean
    Player:StopCameraFade:
      args:[]
    Player:SetCameraLocation:
      args:
      - type: 
          display: Vector
    Player:SetCameraRotation:
      args:
      - type: 
          display: Rotator
    Player:TranslateCameraTo:
      args:
      - type: 
          display: Vector
      - type: number
      - required: false
        type: number
    Player:RotateCameraTo:
      args:
      - type: 
          display: Rotator
      - type: number
      - required: false
        type: number
    Player:SetCameraSocketOffset:
      args:
      - type: 
          display: Vector
    Player:SetCameraArmLength:
      args:
      - type: number
      - type: boolean
    Player:AttachCameraTo:
      args:
      - type: 
          display: Actor
      - type: 
          display: Vector
      - type: number
    Player:ResetCamera:
      args:[]
    Player:Spectate:
      args:
      - type: 
          display: Player
      - required: false
        type: number
    Player:SetName:
      args:
      - type: string
    Player:SetVOIPChannel:
      args:
      - type: 
          display: integer
    Player:SetVOIPSetting:
      args:
      - type: 
          display: VOIPSetting
    Player:SetVOIPVolume:
      args:
      - type: number
    Player:UnPossess:
      args:[]
    Player:GetAccountID:
      args:[]
    Player:GetAccountName:
      args:[]
    Player:GetAccountIconURL:
      args:[]
    Player:GetCameraLocation:
      args:[]
    Player:GetCameraArmLength:
      args:
      - required: false
        type: boolean
    Player:GetCameraRotation:
      args:[]
    Player:GetControlledCharacter:
      args:[]
    Player:GetIP:
      args:[]
    Player:GetDimension:
      args:[]
    Player:GetName:
      args:[]
    Player:GetPing:
      args:[]
    Player:GetVOIPChannel:
      args:[]
    Player:GetValue:
      args:
      - type: string
      - type: 
          display: any
    Player:IsHost:
      args:[]
    Player:IsLocalPlayer:
      args:[]
    Player:GetVOIPSetting:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Melee:
    Melee:AddAnimationCharacterUse:
      args:
      - type: string
      - type: number
      - type: 
          display: AnimationSlotType
    Melee:ClearAnimationsCharacterUse:
      args:[]
    Melee:SetImpactSound:
      args:
      - type: 
          display: SurfaceType
      - type: string
      - type: number
      - type: number
    Melee:SetSoundUse:
      args:
      - type: string
    Melee:SetBaseDamage:
      args:
      - required: false
        type: 
          display: integer
    Melee:SetDamageSettings:
      args:
      - type: number
      - type: number
    Melee:SetCooldown:
      args:
      - type: number
    Melee:GetAnimationsCharacterUse:
      args:[]
    Melee:GetSoundUse:
      args:[]
    Melee:GetBaseDamage:
      args:[]
    Melee:GetCooldown:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Prop:
    Prop:SetGrabMode:
      args:
      - type: 
          display: GrabMode
    Prop:SetPhysicsDamping:
      args:
      - type: number
      - type: number
    Prop:SetMesh:
      args:[]
    Prop:GetMesh:
      args:[]
    Prop:GetHandler:
      args:[]
    Prop:GetGrabMode:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Widget:
    Widget:SetVisibility:
      args:
      - type: 
          display: WidgetVisibility
    Widget:GetVisibility:
      args:[]
    Widget:SetFocus:
      args:[]
    Widget:BringToFront:
      args:[]
    Widget:AddToViewport:
      args:[]
    Widget:AddChild:
      args:
      - type: any
    Widget:SetContentForSlot:
      args:
      - type: string
      - required: false
        type: 
          display: Widget
    Widget:SetCanvasLayout:
      args:
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
    Widget:CallBlueprintEvent:
      args:
      - type: string
      - required: false
        type: 
          display: any
    Widget:BindBlueprintEventDispatcher:
      args:
      - type: string
      - type: function
    Widget:UnbindBlueprintEventDispatcher:
      args:
      - type: string
      - type: function
    Widget:SetBlueprintPropertyValue:
      args:
      - type: string
      - type: 
          display: any
    Widget:GetBlueprintPropertyValue:
      args:
      - type: string
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    File:
    File:Close:
      args:[]
    File:Flush:
      args:[]
    File:IsEOF:
      args:[]
    File:IsBad:
      args:[]
    File:IsGood:
      args:[]
    File:HasFailed:
      args:[]
    File:Read:
      args:
      - required: false
        type: 
          display: integer
    File:ReadAsync:
      args:
      - type: 
          display: integer
      - type: function
    File:ReadLine:
      args:[]
    File:ReadJSON:
      args:[]
    File:ReadJSONAsync:
      args:
      - type: function
    File:Seek:
      args:
      - type: 
          display: integer
    File:Size:
      args:[]
    File:Skip:
      args:
      - type: 
          display: integer
    File:Tell:
      args:[]
    File:Write:
      args:
      - type: string
    SceneCapture:
    SceneCapture:AddRenderActor:
      args:
      - type: 
          display: Actor
    SceneCapture:RemoveRenderActor:
      args:
      - type: 
          display: Actor
    SceneCapture:ClearRenderActors:
      args:[]
    SceneCapture:SetFreeze:
      args:
      - type: boolean
    SceneCapture:EncodeToBase64:
      args:
      - required: false
        type: 
          display: ImageFormat
    SceneCapture:EncodeToBase64Async:
      args:
      - required: false
        type: 
          display: ImageFormat
      - type: function
    SceneCapture:SetFOVAngle:
      args:
      - type: number
    SceneCapture:SetShowFlag:
      args:
      - type: string
      - type: boolean
    SceneCapture:Resize:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
    SceneCapture:SetRenderRate:
      args:
      - type: number
    SceneCapture:SetDistanceOptimizationEnabled:
      args:
      - type: boolean
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Grenade:
    Grenade:Explode:
      args:[]
    Grenade:SetDamage:
      args:
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: number
    Grenade:SetTimeToExplode:
      args:
      - type: number
    Grenade:SetThrowForce:
      args:
      - type: 
          display: integer
    Grenade:GetBaseDamage:
      args:[]
    Grenade:GetDamageFalloff:
      args:[]
    Grenade:GetDamageInnerRadius:
      args:[]
    Grenade:GetDamageOuterRadius:
      args:[]
    Grenade:GetMinimumDamage:
      args:[]
    Grenade:GetTimeToExplode:
      args:[]
    Grenade:GetThrowForce:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Debug:
    Entity:
    Entity:GetID:
      args:[]
    Entity:GetClass:
      args:[]
    Entity:IsA:
      args:
      - type: table
    Entity:SubscribeRemote:
      args:
      - type: string
      - type: function
    Entity:SetValue:
      args:
      - type: string
      - type: 
          display: any
      - required: false
        type: boolean
    Entity:GetValue:
      args:
      - type: string
      - type: 
          display: any
    Entity:Destroy:
      args:[]
    Entity:IsValid:
      args:[]
    Entity:CallRemoteEvent:
      args:
      - type: string
      - type: 
          display: Player
      - required: false
        type: 
          display: any
    Entity:CallRemoteEvent:
      args:
      - type: string
      - required: false
        type: 
          display: any
    Entity:BroadcastRemoteEvent:
      args:
      - type: string
      - required: false
        type: 
          display: any
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Canvas:
    Canvas:DrawBox:
      args:
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - type: number
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: BlendMode
    Canvas:DrawLine:
      args:
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - type: number
      - type: 
          display: Color
      - required: false
        type: 
          display: BlendMode
    Canvas:DrawMaterial:
      args:
      - type: string
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: number
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: BlendMode
    Canvas:DrawMaterialFromWebUI:
      args:
      - type: 
          display: WebUI
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: number
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: BlendMode
    Canvas:DrawMaterialFromSceneCapture:
      args:
      - type: 
          display: SceneCapture
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: number
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: BlendMode
    Canvas:DrawText:
      args:
      - type: string
      - type: 
          display: Vector2D
      - required: false
        type: 
          display: FontType
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: Color
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: boolean
      - required: false
        type: 
          display: Color
    Canvas:DrawTexture:
      args:
      - type: string
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: BlendMode
      - required: false
        type: number
      - required: false
        type: 
          display: Vector2D
    Canvas:DrawPolygon:
      args:
      - type: string
      - type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: BlendMode
    Canvas:DrawRect:
      args:
      - type: string
      - type: 
          display: Vector2D
      - type: 
          display: Vector2D
      - required: false
        type: 
          display: Color
      - required: false
        type: 
          display: BlendMode
    Canvas:SetAutoRepaintRate:
      args:
      - type: boolean
    Canvas:GetSize:
      args:[]
    Canvas:Resize:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
    Canvas:SetScreenPosition:
      args:
      - type: 
          display: Vector2D
    Canvas:SetAutoResize:
      args:
      - type: boolean
    Canvas:SetVisibility:
      args:
      - type: boolean
    Canvas:Repaint:
      args:[]
    Canvas:Clear:
      args:
      - type: 
          display: Color
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Client:
    Timer:
    Actor:
    Actor:AddImpulse:
      args:
      - type: 
          display: Vector
      - required: false
        type: boolean
    Actor:AttachTo:
      args:
      - type: 
          display: Actor
      - required: false
        type: 
          display: AttachmentRule
      - required: false
        type: string
      - required: false
        type: number
      - required: false
        type: boolean
    Actor:Detach:
      args:[]
    Actor:SetCollision:
      args:
      - type: 
          display: CollisionType
    Actor:SetDimension:
      args:
      - type: 
          display: integer
    Actor:SetForce:
      args:
      - type: 
          display: Vector
      - required: false
        type: boolean
    Actor:SetGravityEnabled:
      args:
      - type: boolean
    Actor:SetVisibility:
      args:
      - type: boolean
    Actor:SetHighlightEnabled:
      args:
      - type: boolean
      - required: false
        type: 
          display: integer
    Actor:SetOutlineEnabled:
      args:
      - type: boolean
      - required: false
        type: 
          display: integer
    Actor:SetLifeSpan:
      args:
      - type: number
    Actor:SetLocation:
      args:
      - type: 
          display: Vector
    Actor:SetRotation:
      args:
      - type: 
          display: Rotator
    Actor:SetRelativeLocation:
      args:
      - type: 
          display: Vector
    Actor:SetRelativeRotation:
      args:
      - type: 
          display: Rotator
    Actor:SetScale:
      args:
      - type: 
          display: Vector
    Actor:SetNetworkAuthority:
      args:
      - required: false
        type: 
          display: Player
    Actor:SetNetworkAuthorityAutoDistributed:
      args:
      - type: boolean
    Actor:TranslateTo:
      args:
      - type: 
          display: Vector
      - type: number
      - required: false
        type: number
    Actor:RotateTo:
      args:
      - type: 
          display: Rotator
      - type: number
      - required: false
        type: number
    Actor:IsBeingDestroyed:
      args:[]
    Actor:IsVisible:
      args:[]
    Actor:IsGravityEnabled:
      args:[]
    Actor:IsInWater:
      args:[]
    Actor:IsNetworkDistributed:
      args:[]
    Actor:GetAttachedEntities:
      args:[]
    Actor:GetAttachedTo:
      args:[]
    Actor:GetBounds:
      args:[]
    Actor:GetCollision:
      args:[]
    Actor:GetLocation:
      args:[]
    Actor:GetRelativeLocation:
      args:[]
    Actor:GetNetworkAuthority:
      args:[]
    Actor:GetRotation:
      args:[]
    Actor:GetRelativeRotation:
      args:[]
    Actor:GetForce:
      args:[]
    Actor:GetDimension:
      args:[]
    Actor:HasNetworkAuthority:
      args:[]
    Actor:HasAuthority:
      args:[]
    Actor:GetScale:
      args:[]
    Actor:GetVelocity:
      args:[]
    Actor:AddActorTag:
      args:
      - type: string
    Actor:RemoveActorTag:
      args:
      - type: string
    Actor:GetActorTags:
      args:[]
    Actor:WasRecentlyRendered:
      args:[]
    Actor:GetDistanceFromCamera:
      args:[]
    Actor:GetScreenPercentage:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    CharacterSimple:
    CharacterSimple:PlayAnimation:
      args:
      - type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
    CharacterSimple:StopAnimation:
      args:
      - type: string
    CharacterSimple:AddSkeletalMeshAttached:
      args:
      - type: string
      - required: false
        type: string
    CharacterSimple:AddStaticMeshAttached:
      args:
      - type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
    CharacterSimple:RemoveSkeletalMeshAttached:
      args:
      - type: string
    CharacterSimple:RemoveStaticMeshAttached:
      args:
      - type: string
    CharacterSimple:RemoveAllStaticMeshesAttached:
      args:[]
    CharacterSimple:RemoveAllSkeletalMeshesAttached:
      args:[]
    CharacterSimple:SetMesh:
      args:
      - type: any
      - type: boolean
    CharacterSimple:GetMesh:
      args:[]
    CharacterSimple:GetMovingTo:
      args:[]
    CharacterSimple:MoveTo:
      args:
      - type: 
          display: Vector
      - required: false
        type: number
    CharacterSimple:Follow:
      args:
      - type: 
          display: Actor
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: number
    CharacterSimple:StopMovement:
      args:[]
    CharacterSimple:GetPlayer:
      args:[]
    CharacterSimple:GetControlRotation:
      args:[]
    CharacterSimple:HideBone:
      args:
      - required: false
        type: string
    CharacterSimple:UnHideBone:
      args:
      - type: string
    CharacterSimple:IsBoneHidden:
      args:
      - type: string
    CharacterSimple:Jump:
      args:[]
    CharacterSimple:SetJumpZVelocity:
      args:
      - type: 
          display: integer
    CharacterSimple:SetMaxAcceleration:
      args:
      - type: 
          display: integer
    CharacterSimple:SetCapsuleSize:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
    CharacterSimple:SetCanJump:
      args:
      - type: boolean
    CharacterSimple:SetCanCrouch:
      args:
      - type: boolean
    CharacterSimple:SetBrakingSettings:
      args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
    CharacterSimple:SetSpringArmSettings:
      args:
      - type: 
          display: Vector
      - type: number
      - type: 
          display: Vector
      - type: boolean
      - type: number
    CharacterSimple:SetRotationSettings:
      args:
      - type: 
          display: Rotator
      - type: boolean
      - type: boolean
    CharacterSimple:SetSpeedSettings:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
    CharacterSimple:SetPawnSettings:
      args:
      - type: boolean
      - type: boolean
      - type: boolean
    CharacterSimple:SetAnimationBlueprint:
      args:
      - type: string
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    HCharacter:
    HCharacter:AddSkeletalMeshAttached:
      args:
      - type: string
      - required: false
        type: string
    HCharacter:AddStaticMeshAttached:
      args:
      - type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
    HCharacter:Drop:
      args:
    HCharacter:Jump:
      args:[]
    HCharacter:PickUp:
      args:
      - type: 
          display: Pickable
    HCharacter:PlayAnimation:
      args:
      - type: string
      - required: false
        type: 
          display: AnimationSlotType
      - required: false
        type: boolean
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
    HCharacter:StopAnimation:
      args:
      - type: string
    HCharacter:RemoveSkeletalMeshAttached:
      args:
      - type: string
    HCharacter:RemoveStaticMeshAttached:
      args:
      - type: string
    HCharacter:RemoveAllStaticMeshesAttached:
      args:[]
    HCharacter:RemoveAllSkeletalMeshesAttached:
      args:[]
    HCharacter:SetDeathSound:
      args:
      - type: string
    HCharacter:SetMesh:
      args:
      - type: string
    HCharacter:SetInputEnabled:
      args:
      - type: boolean
    HCharacter:SetPainSound:
      args:
      - type: string
    HCharacter:SetRagdollMode:
      args:
      - type: boolean
    HCharacter:SetTeam:
      args:
      - type: 
          display: integer
    HCharacter:IsInRagdollMode:
      args:[]
    HCharacter:IsInputEnabled:
      args:[]
    HCharacter:GetBoneTransform:
      args:
      - type: string
    HCharacter:GetMesh:
      args:[]
    HCharacter:GetPlayer:
      args:[]
    HCharacter:GetTeam:
      args:[]
    HCharacter:EnterVehicle:
      args:
      - type: 
          display: HSimpleVehicle
      - required: false
        type: 
          display: integer
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Weapon:
    Weapon:Reload:
      args:[]
    Weapon:SetAmmoBag:
      args:
      - type: 
          display: integer
    Weapon:SetAmmoClip:
      args:
      - type: 
          display: integer
    Weapon:SetAmmoSettings:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
    Weapon:SetAnimationFire:
      args:
      - type: string
      - required: false
        type: number
    Weapon:SetAnimationCharacterFire:
      args:
      - type: string
      - required: false
        type: number
    Weapon:SetAnimationReload:
      args:
      - type: string
      - required: false
        type: number
    Weapon:GetAnimationReload:
      args:[]
    Weapon:SetAutoReload:
      args:
      - type: boolean
    Weapon:SetBulletColor:
      args:
      - type: 
          display: Color
    Weapon:SetAutoReload:
      args:
      - type: boolean
    Weapon:SetBulletSettings:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
      - type: 
          display: integer
      - type: 
          display: Color
    Weapon:SetCadence:
      args:
      - type: number
    Weapon:SetClipCapacity:
      args:
      - type: 
          display: integer
    Weapon:SetDamage:
      args:
      - type: 
          display: integer
    Weapon:SetHandlingMode:
      args:
      - type: 
          display: HandlingMode
    Weapon:SetLeftHandTransform:
      args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
    Weapon:SetMagazineMesh:
      args:
      - type: string
      - required: false
        type: string
    Weapon:PlayAnimation:
      args:
      - type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
    Weapon:SetParticlesBulletTrail:
      args:
      - type: string
    Weapon:SetParticlesBarrel:
      args:
      - type: string
    Weapon:SetParticlesShells:
      args:
      - type: string
    Weapon:SetRightHandOffset:
      args:
      - type: 
          display: Vector
    Weapon:SetSightFOVMultiplier:
      args:
      - type: number
    Weapon:SetSightTransform:
      args:
      - type: 
          display: Vector
      - type: 
          display: Rotator
    Weapon:SetSoundDry:
      args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
    Weapon:SetSoundLoad:
      args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
    Weapon:SetSoundUnload:
      args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
    Weapon:SetSoundZooming:
      args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
    Weapon:SetSoundFire:
      args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
    Weapon:SetSoundAim:
      args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
    Weapon:SetSoundFireLastBullets:
      args:
      - type: string
      - required: false
        type: 
          display: integer
    Weapon:SetSpread:
      args:
      - type: number
    Weapon:SetRecoil:
      args:
      - type: number
    Weapon:SetUsageSettings:
      args:
      - type: boolean
      - type: boolean
    Weapon:SetWallbangSettings:
      args:
      - type: 
          display: integer
      - type: number
    Weapon:GetAmmoBag:
      args:[]
    Weapon:GetAmmoClip:
      args:[]
    Weapon:GetAmmoToReload:
      args:[]
    Weapon:GetHandlingMode:
      args:[]
    Weapon:GetAnimationCharacterFire:
      args:[]
    Weapon:GetAnimationFire:
      args:[]
    Weapon:GetMagazineMesh:
      args:[]
    Weapon:GetParticlesBulletTrail:
      args:[]
    Weapon:GetParticlesShells:
      args:[]
    Weapon:GetSoundDry:
      args:[]
    Weapon:GetSoundLoad:
      args:[]
    Weapon:GetSoundUnload:
      args:[]
    Weapon:GetSoundZooming:
      args:[]
    Weapon:GetSoundAim:
      args:[]
    Weapon:GetSoundFire:
      args:[]
    Weapon:GetCanHoldUse:
      args:[]
    Weapon:GetHoldReleaseUse:
      args:[]
    Weapon:GetBoneTransform:
      args:
      - type: string
    Weapon:GetBulletCount:
      args:[]
    Weapon:GetBulletColor:
      args:[]
    Weapon:GetCadence:
      args:[]
    Weapon:GetClipCapacity:
      args:[]
    Weapon:GetDamage:
      args:[]
    Weapon:GetRightHandOffset:
      args:[]
    Weapon:GetLeftHandLocation:
      args:[]
    Weapon:GetLeftHandRotation:
      args:[]
    Weapon:GetSightLocation:
      args:[]
    Weapon:GetSightRotation:
      args:[]
    Weapon:GetSightFOVMultiplier:
      args:[]
    Weapon:GetSpread:
      args:[]
    Weapon:GetRecoil:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Matrix:
    Matrix:TransformVector:
      args:
      - type: 
          display: Vector
    Matrix:GetTransposed:
      args:[]
    HELIXVehicle:
    HELIXVehicle:SetDoorAnimation:
      args:
      - type: 
          display: integer
      - type: string
      - type: string
    HELIXVehicle:SetDoor:
      args:
      - type: 
          display: integer
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: integer
      - type: 
          display: integer
    HELIXVehicle:PlayAnimation:
      args:
      - type: string
      - required: false
        type: boolean
      - required: false
        type: string
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
    HELIXVehicle:StopAnimation:
      args:
      - type: string
    HELIXVehicle:GetMesh:
      args:[]
    HELIXVehicle:GetPassenger:
      args:
      - type: 
          display: integer
    HELIXVehicle:GetPassengers:
      args:[]
    HELIXVehicle:GetRPM:
      args:[]
    HELIXVehicle:GetGear:
      args:[]
    HELIXVehicle:GetBoneTransform:
      args:
      - type: string
    HELIXVehicle:SetCameraOffset:
      args:
      - type: 
          display: Vector
    HELIXVehicle:GetDoors:
      args:[]
    HELIXVehicle:SetExplosionSettings:
      args:
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Vector
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Vehicle:
    Vehicle:AddStaticMeshAttached:
      args:
      - type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
    Vehicle:Horn:
      args:
      - type: boolean
    Vehicle:RecreatePhysics:
      args:[]
    Vehicle:RemoveStaticMeshAttached:
      args:
      - type: string
    Vehicle:RemoveAllStaticMeshesAttached:
      args:[]
    Vehicle:SetCameraOffset:
      args:
      - type: 
          display: Vector
    Vehicle:SetAutoStartEngine:
      args:
      - type: boolean
    Vehicle:SetEngineStarted:
      args:
      - type: boolean
    Vehicle:SetSteeringSetup:
      args:
      - type: 
          display: SteeringType
      - required: false
        type: number
    Vehicle:SetEngineSetup:
      args:
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: number
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
    Vehicle:SetAerodynamicsSetup:
      args:
      - required: false
        type: 
          display: integer
      - required: false
        type: number
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: number
      - required: false
        type: 
          display: Vector
    Vehicle:SetTransmissionSetup:
      args:
      - required: false
        type: number
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: number
      - required: false
        type: number
    Vehicle:SetWheel:
      args:
      - type: 
          display: integer
      - type: string
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: Vector
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Vector
    Vehicle:SetDoor:
      args:
      - type: 
          display: integer
      - type: 
          display: Vector
      - type: 
          display: Vector
      - type: 
          display: Rotator
      - type: 
          display: integer
      - type: 
          display: integer
    Vehicle:SetSteeringWheelSetup:
      args:
      - type: 
          display: Vector
      - type: 
          display: integer
    Vehicle:SetHeadlightsSetup:
      args:
      - type: 
          display: Vector
      - required: false
        type: 
          display: Color
    Vehicle:SetTaillightsSetup:
      args:
      - type: 
          display: Vector
    Vehicle:PlayAnimation:
      args:
      - type: string
      - required: false
        type: string
      - required: false
        type: boolean
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
    Vehicle:GetMesh:
      args:[]
    Vehicle:GetDoors:
      args:[]
    Vehicle:GetBoneTransform:
      args:
      - type: string
    Vehicle:GetPassenger:
      args:
      - type: 
          display: integer
    Vehicle:GetPassengers:
      args:[]
    Vehicle:GetRPM:
      args:[]
    Vehicle:GetGear:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Console:
    Trigger:
    Trigger:ForceOverlapChecking:
      args:[]
    Trigger:SetExtent:
      args:
      - type: 
          display: Vector
    Trigger:SetColor:
      args:
      - type: 
          display: Color
    Trigger:SetOverlapOnlyClasses:
      args:
      - type: string[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Character:
    Character:AddSkeletalMeshAttached:
      args:
      - type: string
      - required: false
        type: string
    Character:AddStaticMeshAttached:
      args:
      - type: string
      - required: false
        type: string
      - required: false
        type: string
      - required: false
        type: 
          display: Vector
      - required: false
        type: 
          display: Rotator
    Character:Drop:
      args:
    Character:EnterVehicle:
      args:
      - type: 
          display: Vehicle
      - required: false
        type: 
          display: integer
    Character:GrabProp:
      args:
      - type: 
          display: Prop
    Character:HideBone:
      args:
      - required: false
        type: string
    Character:UnHideBone:
      args:
      - type: string
    Character:IsBoneHidden:
      args:
      - type: string
    Character:Jump:
      args:[]
    Character:LeaveVehicle:
      args:[]
    Character:LookAt:
      args:
      - type: 
          display: Vector
    Character:MoveTo:
      args:
      - type: 
          display: Vector
      - required: false
        type: number
    Character:Follow:
      args:
      - type: 
          display: Actor
      - required: false
        type: number
      - required: false
        type: boolean
      - required: false
        type: boolean
      - required: false
        type: number
    Character:StopMovement:
      args:[]
    Character:PickUp:
      args:
      - type: 
          display: Pickable
    Character:PlayAnimation:
      args:
      - type: string
      - required: false
        type: 
          display: AnimationSlotType
      - required: false
        type: boolean
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: boolean
    Character:StopAnimation:
      args:
      - type: string
    Character:RemoveSkeletalMeshAttached:
      args:
      - type: string
    Character:RemoveStaticMeshAttached:
      args:
      - type: string
    Character:RemoveAllStaticMeshesAttached:
      args:[]
    Character:RemoveAllSkeletalMeshesAttached:
      args:[]
    Character:SetAnimationIdleWalkRunStanding:
      args:
      - type: 
          display: Animation
      - required: false
        type: boolean
    Character:SetAnimationIdleWalkRunCrouching:
      args:
      - type: 
          display: Animation
      - required: false
        type: boolean
    Character:SetAnimationIdleWalkRunProning:
      args:
      - type: 
          display: Animation
    Character:SetAnimationsTransitionStandingCrouching:
      args:
      - type: 
          display: Animation
      - type: 
          display: Animation
    Character:SetAnimationsTransitionCrouchingProning:
      args:
      - type: 
          display: Animation
      - type: 
          display: Animation
    Character:SetAccelerationSettings:
      args:
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
    Character:SetBrakingSettings:
      args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
    Character:SetCameraMode:
      args:
      - type: 
          display: CameraMode
    Character:SetCameraOffset:
      args:
      - type: 
          display: Vector
    Character:SetCanCrouch:
      args:
      - type: boolean
    Character:SetCanAim:
      args:
      - type: boolean
    Character:SetCanDrop:
      args:
      - type: boolean
    Character:SetCanJump:
      args:
      - type: boolean
    Character:SetCanDive:
      args:
      - type: boolean
    Character:SetCanSprint:
      args:
      - type: boolean
    Character:SetCanGrabProps:
      args:
      - type: boolean
    Character:SetCanPickupPickables:
      args:
      - type: boolean
    Character:SetCanPunch:
      args:
      - type: boolean
    Character:SetCanDeployParachute:
      args:
      - type: boolean
    Character:SetCapsuleSize:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
    Character:SetDamageMultiplier:
      args:
      - type: string
      - type: number
    Character:SetDeathSound:
      args:
      - type: string
    Character:SetFallDamageTaken:
      args:
      - type: 
          display: integer
    Character:SetFlyingMode:
      args:
      - type: boolean
    Character:SetFOVMultiplier:
      args:
      - type: number
    Character:SetHighFallingTime:
      args:
      - type: number
    Character:SetGaitMode:
      args:
      - type: 
          display: GaitMode
    Character:SetGravityScale:
      args:
      - type: number
    Character:SetImpactDamageTaken:
      args:
      - type: 
          display: integer
    Character:SetRadialDamageToRagdoll:
      args:
      - type: 
          display: integer
    Character:SetFootstepVolumeMultiplier:
      args:
      - type: number
    Character:SetInvulnerable:
      args:
      - type: boolean
    Character:SetJumpZVelocity:
      args:
      - type: 
          display: integer
    Character:SetMesh:
      args:
      - type: string
    Character:SetMorphTarget:
      args:
      - type: string
      - type: number
    Character:GetMorphTarget:
      args:
      - type: string
    Character:ClearMorphTargets:
      args:[]
    Character:GetAllMorphTargetNames:
      args:[]
    Character:SetPhysicalAnimationSettings:
      args:
      - type: string
      - type: boolean
      - type: boolean
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
    Character:ResetPhysicalAnimationSettings:
      args:[]
    Character:SetInputEnabled:
      args:
      - type: boolean
    Character:SetParachuteTexture:
      args:
      - type: string
    Character:SetPainSound:
      args:
      - type: string
    Character:SetPunchDamage:
      args:
      - type: 
          display: integer
    Character:SetRagdollMode:
      args:
      - type: boolean
    Character:SetSimulatePhysics:
      args:
      - type: boolean
    Character:SetSpeedMultiplier:
      args:
      - type: number
    Character:SetStanceMode:
      args:
      - type: 
          display: StanceMode
    Character:SetTeam:
      args:
      - type: 
          display: integer
    Character:SetViewMode:
      args:
      - type: 
          display: ViewMode
    Character:SetWeaponAimMode:
      args:
      - type: 
          display: AimMode
    Character:UnGrabProp:
      args:[]
    Character:IsInRagdollMode:
      args:[]
    Character:IsInvulnerable:
      args:[]
    Character:IsInputEnabled:
      args:[]
    Character:GetCameraMode:
      args:[]
    Character:GetCanDrop:
      args:[]
    Character:GetCanPunch:
      args:[]
    Character:GetCanAim:
      args:[]
    Character:GetCanCrouch:
      args:[]
    Character:GetCanSprint:
      args:[]
    Character:GetCanGrabProps:
      args:[]
    Character:GetCanPickupPickables:
      args:[]
    Character:GetCapsuleSize:
      args:[]
    Character:GetBoneTransform:
      args:
      - type: string
    Character:GetControlRotation:
      args:[]
    Character:GetDamageMultiplier:
      args:
      - type: string
    Character:GetFallDamageTaken:
      args:[]
    Character:GetFallingMode:
      args:[]
    Character:GetFlyingMode:
      args:[]
    Character:GetGaitMode:
      args:[]
    Character:GetGrabbedProp:
      args:[]
    Character:GetGravityScale:
      args:[]
    Character:GetImpactDamageTaken:
      args:[]
    Character:GetJumpZVelocity:
      args:[]
    Character:GetMesh:
      args:[]
    Character:GetMovingTo:
      args:[]
    Character:GetPicked:
      args:[]
    Character:GetPlayer:
      args:[]
    Character:GetPunchDamage:
      args:[]
    Character:GetSpeedMultiplier:
      args:[]
    Character:GetStanceMode:
      args:[]
    Character:GetSwimmingMode:
      args:[]
    Character:GetTeam:
      args:[]
    Character:GetVehicle:
      args:[]
    Character:GetViewMode:
      args:[]
    Character:GetWeaponAimMode:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    HSimpleVehicle:
    HSimpleVehicle:SetSiren:
      args:
      - type: boolean
    HSimpleVehicle:SetHorn:
      args:
      - type: boolean
    HSimpleVehicle:SetDoorState:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
      - type: 
          display: integer
    HSimpleVehicle:SetIsDrifting:
      args:
      - type: boolean
    HSimpleVehicle:SetHoodState:
      args:
      - type: 
          display: integer
      - type: boolean
    HSimpleVehicle:SetTrunkState:
      args:
      - type: 
          display: integer
      - type: boolean
    HSimpleVehicle:SetWheelState:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
    HSimpleVehicle:PrintData:
      args:[]
    HSimpleVehicle:SetVehicleHealthState:
      args:
      - required: false
        type: 
          display: integer
    HSimpleVehicle:SetAllowEnterExitFromInteraction:
      args:
      - required: false
        type: boolean
    HSimpleVehicle:SetVehicleOwner:
      args:
      - type: string
    HSimpleVehicle:SetOnlyOwnerCanInteract:
      args:
      - type: boolean
    HSimpleVehicle:SetDrift_DriftLateralForceFront:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetDrift_DriftLateralForceRear:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetDrift_BaseLateralForceFront:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetDrift_BaseLateralForceRear:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetDrift_DriftTorque:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetDrift_BaseDriftTorque:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetDrift_LowSpeedLateralForce:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetTransmission_Efficiency:
      args:
      - type: number
    HSimpleVehicle:SetTransmission_ShiftDelay:
      args:
      - type: number
    HSimpleVehicle:SetTransmission_DifferentialRatio:
      args:
      - type: number
    HSimpleVehicle:SetTransmission_UpshiftRatio:
      args:
      - type: number
    HSimpleVehicle:SetTransmission_DownshiftRatio:
      args:
      - type: number
    HSimpleVehicle:SetEngine_MaxTorque:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetEngine_MaxRPM:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetEngine_MaxReverseSpeed:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetEngine_BrakeForce:
      args:
      - type: 
          display: integer
    HSimpleVehicle:SetEngine_BrakeCoefficient:
      args:
      - type: number
    HSimpleVehicle:SetAerodynamics_DragCoefficient:
      args:
      - type: number
    HSimpleVehicle:SetAerodynamics_CrossSectionArea:
      args:
      - type: number
    HSimpleVehicle:SetWheelRadius:
      args:
      - type: 
          display: integer
      - type: number
      - type: number
    HSimpleVehicle:SetGearRatios:
      args:
      - type: string
    HSimpleVehicle:NumOfAllowedPassanger:
      args:[]
    HSimpleVehicle:NumOfCurrentPassanger:
      args:[]
    HSimpleVehicle:GetVehicleSpeed:
      args:[]
    HSimpleVehicle:GetVehicleAcceleration:
      args:[]
    HSimpleVehicle:GetVehicleRPM:
      args:[]
    HSimpleVehicle:GetVehicleGear:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    WebUI:
    WebUI:BringToFront:
      args:[]
    WebUI:CallEvent:
      args:
      - type: string
      - type: 
          display: any
    WebUI:LoadURL:
      args:
      - type: string
    WebUI:LoadHTML:
      args:
      - type: string
    WebUI:GetName:
      args:[]
    WebUI:ExecuteJavaScript:
      args:
      - type: string
    WebUI:SetFocus:
      args:[]
    WebUI:RemoveFocus:
      args:[]
    WebUI:SetLayout:
      args:
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
      - required: false
        type: 
          display: Vector2D
    WebUI:SetFreeze:
      args:
      - type: boolean
    WebUI:SetVisibility:
      args:
      - type: 
          display: WidgetVisibility
    WebUI:SpawnSound:
      args:
      - required: false
        type: 
          display: Vector
      - required: false
        type: boolean
      - required: false
        type: number
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: integer
      - required: false
        type: 
          display: AttenuationFunction
    WebUI:SendMouseWheelEvent:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
      - type: number
      - type: number
    WebUI:SendKeyEvent:
      args:
      - type: 
          display: WebUIKeyType
      - type: 
          display: integer
      - required: false
        type: 
          display: WebUIModifier
    WebUI:SendMouseMoveEvent:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
      - required: false
        type: 
          display: WebUIModifier
      - required: false
        type: boolean
    WebUI:SendMouseClickEvent:
      args:
      - type: 
          display: integer
      - type: 
          display: integer
      - type: 
          display: WebUIMouseType
      - type: boolean
      - required: false
        type: 
          display: WebUIModifier
      - required: false
        type: 
          display: integer
    WebUI:GetSize:
      args:[]
    WebUI:GetVisibility:
      args:[]
    WebUI:IsFrozen:
      args:[]
    Subscribe:
      args:
        - type: string
        - type: function
    Unsubscribe:
      args:
        - type: string
        - type: function
    Payment:
    Color:
    Color.R:
      property: read-only
    Color.G:
      property: read-only
    Color.B:
      property: read-only
    Color.A:
      property: read-only
    Color:ToHex:
      args:
      - required: false
        type: boolean
    Discord:
    Vector:
    Vector.X:
      property: read-only
    Vector.Y:
      property: read-only
    Vector.Z:
      property: read-only
    Vector:Equals:
      args:
      - type: 
          display: Vector
      - required: false
        type: number
    Vector:Distance:
      args:
      - type: 
          display: Vector
    Vector:DistanceSquared:
      args:
      - type: 
          display: Vector
    Vector:GetUnsafeNormal:
      args:
    Vector:GetSafeNormal:
      args:
    Vector:IsNearlyZero:
      args:
      - required: false
        type: number
    Vector:IsZero:
      args:[]
    Vector:Normalize:
      args:[]
    Vector:Size:
      args:[]
    Vector:SizeSquared:
      args:[]
    Vector:Rotation:
      args:[]
    Quat:
    Quat.X:
      property: read-only
    Quat.Y:
      property: read-only
    Quat.Z:
      property: read-only
    Quat.W:
      property: read-only
    Quat:Normalize:
      args:[]
    Quat:Rotator:
      args:[]
    Quat:Inverse:
      args:[]
    Matchmaking:
    Sky:
    HELIXUtils:
    Server:
    Trace:
    Vector2D:
    Vector2D.X:
      property: read-only
    Vector2D.Y:
      property: read-only
    HTTP:
    Events:
    Viewport:
    Input:
    PersistentDatabase:
    Package:
    JSON:
    Level:
    Navigation:
    PostProcess:
    HELIXTable:
    HELIXMath:
    Rotator:
    Rotator.Pitch:
      property: read-only
    Rotator.Yaw:
      property: read-only
    Rotator.Roll:
      property: read-only
    Rotator:GetForwardVector:
      args:[]
    Rotator:GetRightVector:
      args:[]
    Rotator:GetUpVector:
      args:[]
    Rotator:RotateVector:
      args:
      - type: 
          display: Vector
    Rotator:Normalize:
      args:[]
    Rotator:UnrotateVector:
      args:
      - type: 
          display: Vector
    Rotator:Quaternion:
      args:[]
    Rotator:GetNormalized:
      args:[]
    Rotator:IsNearlyZero:
      args:
      - required: false
        type: number
    Rotator:IsZero:
      args:[]